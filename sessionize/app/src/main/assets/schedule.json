[
  {
    "date": "2018-10-03T00:00:00",
    "rooms": [
      {
        "id": 2200,
        "name": "Effectenbeurzaal",
        "sessions": [
          {
            "id": "49d253ea-09f3-4c9e-866a-6dd0702c4f86",
            "title": "Registration",
            "description": null,
            "startsAt": "2018-10-03T08:00:00",
            "endsAt": "2018-10-03T09:00:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "63189",
            "title": "Asynchronous Programming in Kotlin Workshop",
            "description": "TBA",
            "startsAt": "2018-10-03T09:00:00",
            "endsAt": "2018-10-03T16:30:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "844e820d-d54c-49ec-9e4b-e0edc1756eb0",
                "name": "Roman Elizarov"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          }
        ],
        "hasOnlyPlenumSessions": false
      },
      {
        "id": 2201,
        "name": "Granbeurszaal",
        "sessions": [
          {
            "id": "57801",
            "title": "Building Full Stack Application in Kotlin Workshop",
            "description": "In this workshop we will use Kotlin to build a fully functional Web Application from scratch. We will be using Kotlin/JVM for the backend and Kotlin/JavaScript for the front-end, in combination with Spring Boot and React respectively. We will develop the application over a number of iterations, starting with basic CRUD functionality but expanding rapidly to include security, WebSockets and automated testing. By the end of the day you will have the skills necessary to apply Kotlin in all the tiers of your architecture and the confidence to design and develop new projects using this language.",
            "startsAt": "2018-10-03T09:00:00",
            "endsAt": "2018-10-03T16:30:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "dc468061-f6a9-4bc5-a5d7-3507097b795e",
                "name": "Garth Gilmour"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          }
        ],
        "hasOnlyPlenumSessions": false
      },
      {
        "id": 2202,
        "name": "Berlagezaal",
        "sessions": [
          {
            "id": "36479",
            "title": "Developing Android Apps in Kotlin Workshop",
            "description": "In this workshop you will learn how to convert an existing Java application to Kotlin. With an in-depth dive into Kotlin and Android best practices you’ll walk away ready to apply Kotlin to your app. We’ll also learn about how to use Arch Components in Kotlin and Android KTX.",
            "startsAt": "2018-10-03T09:00:00",
            "endsAt": "2018-10-03T16:30:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "3b7c5574-4d74-4529-9d3f-d058f302fea1",
                "name": "Florina Muntenescu"
              },
              {
                "id": "5a675a84-672d-4e59-bd7e-3c162c2e97bf",
                "name": "Sean McQuillan"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          }
        ],
        "hasOnlyPlenumSessions": false
      },
      {
        "id": 2203,
        "name": "Administratiezaal",
        "sessions": [
          {
            "id": "57770",
            "title": "Refactoring to Kotlin Workshop ",
            "description": "If you're a Java developer who hasn't yet made the leap to Kotlin, this workshop is for you. Working as a group, we'll take existing Java code, convert it with a single IntelliJ command, and then refactor the results to idiomatic Kotlin. We'll see how to take advantage of the language to make code smaller, faster and more expressive, whilst at the same time interoperating with your existing application and Java libraries.\r\n\r\nIn the afternoon we'll move from the prepared exercises to your code, working together to apply the techniques and insights from the morning to real codebases with real constraints. So if you have some code you'd like to start migrating, bring it along on a laptop with IntelliJ installed.",
            "startsAt": "2018-10-03T09:00:00",
            "endsAt": "2018-10-03T16:30:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "c471c1b0-53d7-45cf-a12c-340714972d83",
                "name": "Duncan McGregor"
              },
              {
                "id": "30cc8bd5-49a1-4609-bf70-ff5e6b12b3c2",
                "name": "Nat Pryce"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          }
        ],
        "hasOnlyPlenumSessions": false
      },
      {
        "id": 2204,
        "name": "Verwey kamer",
        "sessions": [
          {
            "id": "57802",
            "title": "Up and running in Kotlin Workshop",
            "description": "This full-day workshop aims to share with you the power and the beauty of Kotlin. We imply that you consider using Kotlin in your every-day work and want to feel more confident with the language first. We'll have a basic overview of the language, as well as a discussion of some corner cases, especially concerning Java interoperability. The workshop is based on your Java experience; it shows the similarities between two languages and focuses on what's going to be different. We'll cover: Basic syntax, nullability, object-oriented programming with Kotlin, functional programming with Kotlin Java interoperability and building DSLs.",
            "startsAt": "2018-10-03T09:00:00",
            "endsAt": "2018-10-03T16:30:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "0f769b19-d5f2-49fb-aa78-a086aa046b7e",
                "name": "Svetlana Isakova"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2204,
            "room": "Verwey kamer"
          }
        ],
        "hasOnlyPlenumSessions": false
      }
    ],
    "timeSlots": [
      {
        "slotStart": "08:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "49d253ea-09f3-4c9e-866a-6dd0702c4f86",
              "title": "Registration",
              "description": null,
              "startsAt": "2018-10-03T08:00:00",
              "endsAt": "2018-10-03T09:00:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "09:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "63189",
              "title": "Asynchronous Programming in Kotlin Workshop",
              "description": "TBA",
              "startsAt": "2018-10-03T09:00:00",
              "endsAt": "2018-10-03T16:30:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "844e820d-d54c-49ec-9e4b-e0edc1756eb0",
                  "name": "Roman Elizarov"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "57801",
              "title": "Building Full Stack Application in Kotlin Workshop",
              "description": "In this workshop we will use Kotlin to build a fully functional Web Application from scratch. We will be using Kotlin/JVM for the backend and Kotlin/JavaScript for the front-end, in combination with Spring Boot and React respectively. We will develop the application over a number of iterations, starting with basic CRUD functionality but expanding rapidly to include security, WebSockets and automated testing. By the end of the day you will have the skills necessary to apply Kotlin in all the tiers of your architecture and the confidence to design and develop new projects using this language.",
              "startsAt": "2018-10-03T09:00:00",
              "endsAt": "2018-10-03T16:30:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "dc468061-f6a9-4bc5-a5d7-3507097b795e",
                  "name": "Garth Gilmour"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "36479",
              "title": "Developing Android Apps in Kotlin Workshop",
              "description": "In this workshop you will learn how to convert an existing Java application to Kotlin. With an in-depth dive into Kotlin and Android best practices you’ll walk away ready to apply Kotlin to your app. We’ll also learn about how to use Arch Components in Kotlin and Android KTX.",
              "startsAt": "2018-10-03T09:00:00",
              "endsAt": "2018-10-03T16:30:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "3b7c5574-4d74-4529-9d3f-d058f302fea1",
                  "name": "Florina Muntenescu"
                },
                {
                  "id": "5a675a84-672d-4e59-bd7e-3c162c2e97bf",
                  "name": "Sean McQuillan"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "57770",
              "title": "Refactoring to Kotlin Workshop ",
              "description": "If you're a Java developer who hasn't yet made the leap to Kotlin, this workshop is for you. Working as a group, we'll take existing Java code, convert it with a single IntelliJ command, and then refactor the results to idiomatic Kotlin. We'll see how to take advantage of the language to make code smaller, faster and more expressive, whilst at the same time interoperating with your existing application and Java libraries.\r\n\r\nIn the afternoon we'll move from the prepared exercises to your code, working together to apply the techniques and insights from the morning to real codebases with real constraints. So if you have some code you'd like to start migrating, bring it along on a laptop with IntelliJ installed.",
              "startsAt": "2018-10-03T09:00:00",
              "endsAt": "2018-10-03T16:30:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "c471c1b0-53d7-45cf-a12c-340714972d83",
                  "name": "Duncan McGregor"
                },
                {
                  "id": "30cc8bd5-49a1-4609-bf70-ff5e6b12b3c2",
                  "name": "Nat Pryce"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "57802",
              "title": "Up and running in Kotlin Workshop",
              "description": "This full-day workshop aims to share with you the power and the beauty of Kotlin. We imply that you consider using Kotlin in your every-day work and want to feel more confident with the language first. We'll have a basic overview of the language, as well as a discussion of some corner cases, especially concerning Java interoperability. The workshop is based on your Java experience; it shows the similarities between two languages and focuses on what's going to be different. We'll cover: Basic syntax, nullability, object-oriented programming with Kotlin, functional programming with Kotlin Java interoperability and building DSLs.",
              "startsAt": "2018-10-03T09:00:00",
              "endsAt": "2018-10-03T16:30:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "0f769b19-d5f2-49fb-aa78-a086aa046b7e",
                  "name": "Svetlana Isakova"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      }
    ]
  },
  {
    "date": "2018-10-04T00:00:00",
    "rooms": [
      {
        "id": 2200,
        "name": "Effectenbeurzaal",
        "sessions": [
          {
            "id": "58244c84-016f-4254-9f3f-3dadf8e43a16",
            "title": "Registration",
            "description": null,
            "startsAt": "2018-10-04T07:30:00",
            "endsAt": "2018-10-04T09:00:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "44708",
            "title": "Keynote",
            "description": "Conference Opening Keynote",
            "startsAt": "2018-10-04T09:00:00",
            "endsAt": "2018-10-04T10:00:00",
            "isServiceSession": false,
            "isPlenumSession": true,
            "speakers": [
              {
                "id": "9671b9b6-771a-4df2-b800-1298c43b0a3b",
                "name": "Andrey Breslav"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "a8f11cb8-e454-44f2-a80f-a2f9dde7cef5",
            "title": "Break",
            "description": null,
            "startsAt": "2018-10-04T10:00:00",
            "endsAt": "2018-10-04T10:15:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "42130",
            "title": "A Multiplatform Delight",
            "description": "SQL Delight, a type-safe database API, recently completed migration from being a Java-generating, Android-specific tool to a Kotlin-generating, multiplatform one. Migrating an API from Java to Kotlin has obvious benefits, but adding multiplatform support for iOS introduces a dynamic which complicates the API, code generation, and runtime.\r\n\r\nThis talk will cover the challenges of platform-agnostic API design, type-safe multiplatform Kotlin code generation, and the integration of platform-specific runtimes such that the library not only runs efficiently on each platform but also integrates well with the other languages each might be using.",
            "startsAt": "2018-10-04T10:15:00",
            "endsAt": "2018-10-04T11:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "3eabdd46-6cb5-4083-9eb8-1ad9a3b7a5eb",
                "name": "Jake Wharton"
              },
              {
                "id": "6789439c-c425-4179-97b7-ccc21476ea6f",
                "name": "Alec Strong"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "719b926a-079c-487e-9734-725261c91126",
            "title": "Break",
            "description": null,
            "startsAt": "2018-10-04T11:00:00",
            "endsAt": "2018-10-04T11:15:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "42172",
            "title": "Type-safe build logic with Gradle Kotlin DSL",
            "description": "As of Gradle 5.0, you can now author your build scripts in Kotlin. You will discover a much richer IDE experience through editor assistance, better refactoring and debugging.\r\n\r\nIn this live coding session, we will walk through several Groovy-based build examples and convert them to Kotlin: demonstrating Gradle Kotlin DSL features and best practices so that you can take your build to the next level.",
            "startsAt": "2018-10-04T11:15:00",
            "endsAt": "2018-10-04T12:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "ebc612d5-a764-46b6-8524-0adb9638dd5c",
                "name": "Paul Merlin"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5703,
                    "name": "Ops"
                  },
                  {
                    "id": 5702,
                    "name": "Scripting"
                  },
                  {
                    "id": 10286,
                    "name": "_msp"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "a17035de-9848-4b46-9b3d-6b0272e2a65b",
            "title": "Lunch",
            "description": null,
            "startsAt": "2018-10-04T12:00:00",
            "endsAt": "2018-10-04T13:00:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "41948",
            "title": "Safe(r) Kotlin Code - Static Analysis tools for Kotlin",
            "description": "When introducing Kotlin to a Java codebase one thing that is often missing from the picture are static analysis tools. \r\n\r\nStatic Analysis suites can give an overview of a codebases health, point out potential issues to make the code safer and can help to keep the codebase in a uniform style. The Java ecosystem already has a broad selection of different static analysis tools each with a different focus.\r\n\r\nTo cater for the different language features and concepts that Kotlin offers most Java focussed static analysis tools are not applicable to Kotlin code.\r\nThis talk will showcase static analysis tools written specifically to improve Kotlin code (and are mostly written in Kotlin themselves). Tools such as detekt, ktlint and Android Lint will be introduced and explored for their use-cases and how they can complement each other.\r\n\r\nAs Marvin is one of the maintainers of detekt he will also share in more detail how detekt works, what it aims to achieve and how the future roadmap looks like for detekt.",
            "startsAt": "2018-10-04T13:00:00",
            "endsAt": "2018-10-04T13:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "e6898269-f378-43f6-a81c-fb2b8bada496",
                "name": "Marvin Ramin"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5703,
                    "name": "Ops"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "d04740df-c437-46dc-a0f0-f05ebd7724c1",
            "title": "Break",
            "description": null,
            "startsAt": "2018-10-04T13:45:00",
            "endsAt": "2018-10-04T14:00:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "36869",
            "title": "Annotation Processing in a Kotlin World",
            "description": "Annotation processing is a powerful tool to extend your codebase at build time, and the advent of Kotlin in the android community introduces a dimension to this. Kapt works with existing Java processors, but it doesn’t come without its quirks at the interop layer. This talk will dive into how you can leverage Kotlin bytecode’s @Metadata annotations to better understand Kotlin code during annotation processing, covering anywhere from case studies in Dagger and Moshi to leveraging tools like KotlinPoet to even generate Kotlin code that seamlessly leverages language features.",
            "startsAt": "2018-10-04T14:00:00",
            "endsAt": "2018-10-04T14:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "8ce6cf3a-735e-4a2a-b05f-e2081e5b6741",
                "name": "Zac Sweers"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5671,
                    "name": "Advanced"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5693,
                    "name": "Desktop"
                  },
                  {
                    "id": 5702,
                    "name": "Scripting"
                  },
                  {
                    "id": 5701,
                    "name": "Other"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "4b5e6f09-eddf-414e-a1ae-7a449e8dec85",
            "title": "Afternoon Break",
            "description": null,
            "startsAt": "2018-10-04T14:45:00",
            "endsAt": "2018-10-04T15:15:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "33626",
            "title": "Exploring the Kotlin type hierarchy from top to bottom",
            "description": "Coming from Java, Kotlin's type system can appear quite daunting: nullable types, Unit, Nothing, Any, variance specifiers, function types, and more. But don't panic! Kotlin's type hierarchy is actually simple – it has very few rules to learn and those rules combine together consistently and predictably. Thanks to those rules, Kotlin useful language features, such as null safety and unreachable code analysis, do not rely on special cases that you must memorise, or ad-hoc checks in the compiler and IDE that stop working when your code gets too complicated.\r\n\r\nIn this talk Nat will take you on a tour of Kotlin's type hierarchy and demonstrate how to use it to model your application domains, using example code taken from real projects.",
            "startsAt": "2018-10-04T15:15:00",
            "endsAt": "2018-10-04T16:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "30cc8bd5-49a1-4609-bf70-ff5e6b12b3c2",
                "name": "Nat Pryce"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5701,
                    "name": "Other"
                  },
                  {
                    "id": 5704,
                    "name": "Functional"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "21a7d343-c18d-4cad-b672-ae6f671f85ce",
            "title": "Break",
            "description": null,
            "startsAt": "2018-10-04T16:00:00",
            "endsAt": "2018-10-04T16:15:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "42214",
            "title": "Shaping your app’s architecture with Kotlin and Architecture Components",
            "description": "Many apps began adopting Kotlin and Android Architecture Components atthe same time. While ostensibly quite different, the interplay of these two changes ends up heavily influencing each other. \r\n\r\nPlaid is an open source example of material design concepts. It has a  complex functionality but had a large amount of technical debt. We took the challenge of refactoring the app, following the Android Guide to App Architecture, while simultaneously converting the app to Kotlin—while keeping the existing functionality, fixing broken API integrations and adding new ones. \r\n\r\nThe Guide to App Architecture provided a good starting point for creating lean, isolated classes. Kotlin features like delegates, high order functions and lambdas, sealed classes and others, end up shaping much of the architecture of the app. This talk covers the architecture lessons learned while converting Plaid to Kotlin and integrating Architecture Components.",
            "startsAt": "2018-10-04T16:15:00",
            "endsAt": "2018-10-04T17:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "3b7c5574-4d74-4529-9d3f-d058f302fea1",
                "name": "Florina Muntenescu"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "4f835fe0-6d8a-430c-ad54-5e0aece6cb3e",
            "title": "Break",
            "description": null,
            "startsAt": "2018-10-04T17:00:00",
            "endsAt": "2018-10-04T17:15:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "44706",
            "title": "Representing State: the Kotlin Edition",
            "description": "A core part of any code is the ability to know at any given time the set of conditions that make up its current operations. As developers, we need to know this for a variety of reasons, including because knowing this tells us whether we should be queuing any changes and gives us the ability to return a user to their current experience should the program be interrupted. But despite its crucial nature, codifying the state of an application at any given point in time can often be messy and error prone work. In this talk, we'll look at the reasons representing state can be problematic, and some practical ways we can leverage Kotlin to make it better. This talk is both a theoretical look at how the types we choose influence our ability to validate programs, and a practical exploration of concrete steps we can take to rectify these issues with Kotlin.",
            "startsAt": "2018-10-04T17:15:00",
            "endsAt": "2018-10-04T18:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "161e959e-be4f-4829-88c2-38fc14420785",
                "name": "Christina Lee"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "68f5af49-3b0d-442e-a7bf-39c97d82dbdc",
            "title": "Party",
            "description": null,
            "startsAt": "2018-10-04T18:00:00",
            "endsAt": "2018-10-04T21:00:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          }
        ],
        "hasOnlyPlenumSessions": false
      },
      {
        "id": 2201,
        "name": "Granbeurszaal",
        "sessions": [
          {
            "id": "40652",
            "title": "Next Level DSLs",
            "description": "Configure your app the Kotlin way!\r\n\r\nAaron will walk you through the design of a pluggable app architecture, all driven by an expansive domain-specific language executed at run-time.\r\n\r\nHeavily inspired by the structure of build.gradle, this talk will demonstrate how you can push your configuration logic into a type-safe, declarative, and convenient format.",
            "startsAt": "2018-10-04T10:15:00",
            "endsAt": "2018-10-04T11:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "9e69a295-d063-4826-a2b0-b95943cfbfa2",
                "name": "Aaron Sarazan"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5704,
                    "name": "Functional"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5692,
                    "name": "Server"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          },
          {
            "id": "44032",
            "title": "Graphics Programming with Kotlin",
            "description": "Graphics programming is a field dominated by traditional languages like C and C++, or specialized languages like GLSL and HLSL. In this talk, we'll go over how Kotlin allows you to take advantage of a managed language while preserving the conciseness and expressiveness of low-level languages like C++ when writing math and graphics oriented code.",
            "startsAt": "2018-10-04T11:15:00",
            "endsAt": "2018-10-04T12:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "152f613f-841b-407d-9a65-3703ec2dfae2",
                "name": "Romain Guy"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5693,
                    "name": "Desktop"
                  },
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5699,
                    "name": "Case Studies"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          },
          {
            "id": "42607",
            "title": "Android Suspenders",
            "description": "So you've read the Coroutines guide and you're ready to start using them in your Android app to coroutines? Great!\r\n \r\nThis talk will focus on the best practices of using coroutines in your app, including how to handle lifecycle changes with Architecture Components, integration with background job processing, and moving away from RxJava.",
            "startsAt": "2018-10-04T13:00:00",
            "endsAt": "2018-10-04T13:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "fd699fd4-ca8a-4b16-a811-cfb7de9e9b1b",
                "name": "Chris Banes"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5705,
                    "name": "Concurrent"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          },
          {
            "id": "41120",
            "title": "Architecting a Kotlin JVM and JS multiplatform project",
            "description": "Kotlin multiplatform support is a powerful feature that allows us to share code between multiple projects across platforms where it wasn't previously simple or even possible. On this talk we'll explore how to take advantage of this feature by dissecting a project that uses concepts like expect/actual keywords, expectedBy, typealiases, javascript interop and more. By the end, attendees will have a solid understanding of how to get started and build their own Kotlin projects leveraging multiplatform support and code sharing.",
            "startsAt": "2018-10-04T14:00:00",
            "endsAt": "2018-10-04T14:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "3536b891-c1c7-41f8-9882-eeb1288a4212",
                "name": "Felipe Lima"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5692,
                    "name": "Server"
                  },
                  {
                    "id": 5695,
                    "name": "Web"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          },
          {
            "id": "63188",
            "title": "Kotlin/Native concurrency model",
            "description": "Kotlin/Native runtime is designed to minimize possible programmers mistakes related to concurrency and undesired mutable state. To achieve this goal, while keeping the source-level compatibility with Kotlin,  runtime and standard library was carefully designed to avoid concurrently accessible mutable state. In this talk we will discuss both reasoning behind this design, design and implementation details of the runtime and compiler. Also generic topics of automated memory management in the compiled language are covered.",
            "startsAt": "2018-10-04T15:15:00",
            "endsAt": "2018-10-04T16:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "315ddf57-03bf-4c09-a190-ce82cc06f7ec",
                "name": "Nikolay Igotti"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          },
          {
            "id": "45353",
            "title": "New Type Inference and Related Language Features",
            "description": "The new reworked type inference engine of Kotlin brings many new features that can be tried in experimental mode in 1.3. Besides just getting smarter and more predictable, this also brings a powerful data flow contract facility and some annotations to provide useful hints for type inference. This talk will provide a deep dive into the Kotlin type inference and what it will bring us in future versions.",
            "startsAt": "2018-10-04T16:15:00",
            "endsAt": "2018-10-04T17:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "0f769b19-d5f2-49fb-aa78-a086aa046b7e",
                "name": "Svetlana Isakova"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5671,
                    "name": "Advanced"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          },
          {
            "id": "22181",
            "title": "Effective multiplatform Kotlin development",
            "description": "Kotlin enables you to write Android, iOS and web applications 100% natively. When you add good architecture, you can achieve enormous code reusage. In this lecture, I will show how you can do it yourself. I will present possibilities of this approach, how to apply clean architecture there and how to unit test it all. ",
            "startsAt": "2018-10-04T17:15:00",
            "endsAt": "2018-10-04T18:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "20d1e1e0-60d3-4b0f-8f82-07e96be00b91",
                "name": "Marcin Moskała"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5693,
                    "name": "Desktop"
                  },
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5695,
                    "name": "Web"
                  },
                  {
                    "id": 5699,
                    "name": "Case Studies"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          }
        ],
        "hasOnlyPlenumSessions": false
      },
      {
        "id": 2202,
        "name": "Berlagezaal",
        "sessions": [
          {
            "id": "42004",
            "title": "Dissecting the stdlib",
            "description": "One of the best places to learn idiomatic Kotlin is the stdlib. Now I don’t mean just using the stdlib but going to the source, literally. In this session, we’ll look at some of the methods and tools inside the stdlib and dig into how they’re written to reveal intermediate to advanced language features, slick syntax and conventions, and high-level abstractions to help you write more fluent objects and interfaces. We’ll also take a few glances at the underlying bytecode to understand how and why the features work the way they do.",
            "startsAt": "2018-10-04T10:15:00",
            "endsAt": "2018-10-04T11:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "2d41d3fb-3321-4b47-a401-ae84a5de2423",
                "name": "Huyen Tue Dao"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          },
          {
            "id": "41106",
            "title": "Kotlin and Spring Boot, a match made in heaven",
            "description": "Despite being quite “new”, Spring Boot has seen a spectacular start as an amazing kickstarter for Spring-based application. You can now start your project in a matter of minutes, not days!\r\n\r\nOn the other hand, you’re still using Java, with all its ceremony regarding code… Wouldn’t it be great if we could pair Spring Boot with a powerful yet simple language?\r\n\r\nIn this talk, I’ll live code a Spring Boot application using Kotlin. Come discover how you can now cut through all the red tape and finally focus only the important stuff.",
            "startsAt": "2018-10-04T11:15:00",
            "endsAt": "2018-10-04T12:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "9c904945-768e-4597-b942-6be90cf4d731",
                "name": "Nicolas Frankel"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5692,
                    "name": "Server"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          },
          {
            "id": "22460",
            "title": "GraphQL powered by Kotlin",
            "description": "Description: GraphQL is a query language for your API. This allows you to interact with your existing web services and databases in a new way. Instead of relying on a predetermined output structure from your API, you can \"query\" it and choose only the fields that you're interested in. In this talk, learn what GraphQL is all about and how you can take advantage of it in your applications.\r\n\r\nA few key GraphQL terms we'll cover are:\r\n* Fields/Types\r\n* Variables\r\n* Queries/Mutations\r\n\r\nWe're going to explore how you can create a GraphQL Server with a stack written entirely in Kotlin. Then we'll take a look at how you can integrate the Apollo Client library inside of a Kotlin-powered Android application. GraphQL isn't going away, so here's your chance to get a grip on this exciting technology!",
            "startsAt": "2018-10-04T13:00:00",
            "endsAt": "2018-10-04T13:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "7696a516-13da-40d7-bf15-70dda1317955",
                "name": "Annyce Davis"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5692,
                    "name": "Server"
                  },
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          },
          {
            "id": "35700",
            "title": "Functional CQRS in Kotlin",
            "description": "This presentation will be using live coding to show how to implement and implement a CQRS architecture using functional abstractions, pure functions and immutable data using Kotlin as language.\r\nCQRS concepts go very well together with functional programming principles of immutability and high level functions.\r\nParticipants don't have to know Kotlin or functional programming but the knowledge can be beneficial.\r\nThe session will try to capture the main architecture critical decision in implementing a cqrs application. We also believe that using a functional approach simplify the code and avoid some typical pitfalls in event store implementations. Of course it can bring to other problems so we will discuss those as well.",
            "startsAt": "2018-10-04T14:00:00",
            "endsAt": "2018-10-04T14:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "75e55cce-5747-401e-a1f5-d6a86bb5784d",
                "name": "Uberto Barbini"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5692,
                    "name": "Server"
                  },
                  {
                    "id": 5704,
                    "name": "Functional"
                  },
                  {
                    "id": 5698,
                    "name": "Enterprise"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          },
          {
            "id": "41262",
            "title": "Writing Your First Kotlin Compiler Plugin",
            "description": "The Kotlin compiler plugin API gives us powerful features like Parcelize and the synthetic view accessor methods in kotlinx.android. These features could not be built using similar, but more limited, mechanisms, such as annotation processing.\r\n\r\nThe Kotlin compiler plugin API is not currently well-documented, but that doesn't mean that it can't be explored! In this talk, we will start from scratch and show how we can build a compiler plugin and deploy an artifact to a public location, so that we can build plugins that can be applied as easily as the official compiler plugins.",
            "startsAt": "2018-10-04T15:15:00",
            "endsAt": "2018-10-04T16:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "d471ff1a-f7cd-4ce6-bb5e-f9a2f1db0fe5",
                "name": "Kevin Most"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5671,
                    "name": "Advanced"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5701,
                    "name": "Other"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          },
          {
            "id": "39157",
            "title": "Server as a Function in Kotlin",
            "description": "In this talk, you'll learn about how we successfully rewrote the website of a major scientific publisher to pure Kotlin, serving millions of daily requests and in the process created the open source http4k microservice toolkit.\r\n\r\nThe talk also covers how the team migrated the stack to Continuous Delivery-based deployment into a private on-premise cloud, and how http4k helped us introduce new failure-mode and inter-service contract testing techniques.\r\n\r\nThis approach combines functional programming concepts and the versatility of Kotlin to produce applications that are simpler and more testable than most Java are accustomed to experience. And the best of it: with absolutely no magic!\r\n",
            "startsAt": "2018-10-04T16:15:00",
            "endsAt": "2018-10-04T17:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "4f7b8adb-fd36-4ada-80df-9a6997a7fa04",
                "name": "Ivan Sanchez"
              },
              {
                "id": "b3f34b70-b68f-4325-8ffe-b599217e1f4c",
                "name": "David Denton"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5692,
                    "name": "Server"
                  },
                  {
                    "id": 5695,
                    "name": "Web"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5699,
                    "name": "Case Studies"
                  },
                  {
                    "id": 5704,
                    "name": "Functional"
                  },
                  {
                    "id": 10286,
                    "name": "_msp"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          },
          {
            "id": "61862",
            "title": "Full Stack Kotlin on Google Cloud!",
            "description": "Kotlin is a great multipurpose programming language. Beyond using Kotlin for developing Android apps, Kotlin can power IoT devices, run backend services, and be used to build rich applications running in the Cloud. We will demonstrate how Kotlin can be used across multiple services on Google Cloud Platform. The components being used are Cloud IoT Core, Google App Engine, Cloud Pub/Sub, and more.\r\n",
            "startsAt": "2018-10-04T17:15:00",
            "endsAt": "2018-10-04T18:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "4f876d50-3255-40e6-88f5-aa4aee028637",
                "name": "Brent Shaffer"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5692,
                    "name": "Server"
                  },
                  {
                    "id": 5696,
                    "name": "IoT"
                  },
                  {
                    "id": 5695,
                    "name": "Web"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          }
        ],
        "hasOnlyPlenumSessions": false
      },
      {
        "id": 2203,
        "name": "Administratiezaal",
        "sessions": [
          {
            "id": "42047",
            "title": "Komparing Kotlin Server Frameworks",
            "description": "An overview of what you should look for when trying to find a framework for your Kotlin server backend.  We'll compare a few of the frameworks that are written in Kotlin with frameworks that  support Kotlin.  And we'll find out how \"Kotlin support\" can improve backend code.",
            "startsAt": "2018-10-04T10:15:00",
            "endsAt": "2018-10-04T11:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "dfc3dc33-2505-4098-a12e-e3d6bdfa8a23",
                "name": "Ken Yee"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5692,
                    "name": "Server"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5705,
                    "name": "Concurrent"
                  },
                  {
                    "id": 5695,
                    "name": "Web"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          },
          {
            "id": "41950",
            "title": "Live Coding Kotlin/Native Snake",
            "description": "This is a live coding session in which the classic snake game will be coded live from scratch. You will see how to build Kotlin/Native projects, use C libraries from Kotlin, do memory management, native UI, unit testing and, of course, some of the standard Kotlin features.",
            "startsAt": "2018-10-04T11:15:00",
            "endsAt": "2018-10-04T12:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "9aa1160b-ce4f-4992-a1ad-b6da7d62c033",
                "name": "Dmitry Kandalov"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5693,
                    "name": "Desktop"
                  },
                  {
                    "id": 5701,
                    "name": "Other"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          },
          {
            "id": "33530",
            "title": "Mathematical Modeling with Kotlin",
            "description": "\r\nAs programmers, we love solving problems. However, sometimes we need more than programmer grit to solve many problems with no easy answer. Suppose you need to tightly schedule 190 classes in 20 classrooms, with different class durations, recurrences, and constraints throughout the week? What about minimizing the operating cost of a train schedule while maintaining a steady movement of passengers? How about anticipating an industry competitor's move? Or simply solving a Sudoku?\r\n\r\nMathematical modeling is the workhorse of data science, machine learning, and operations research. By effectively expressing mathematical concepts in code, you can gracefully find solutions to a broad category of problems and avoid impractical brute-force techniques. Even better, Kotlin's pragmatic language features allow clearer and more refactorable models that can safely evolve and be put in production.\r\n\r\nCome to this session to see live examples of Kotlin mathematical models to solve real-world problems like discrete optimization, Bayesian techniques, and artificial neural networks.\r\n",
            "startsAt": "2018-10-04T13:00:00",
            "endsAt": "2018-10-04T13:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "e41e5302-d93c-4bbd-a7b4-761b0139bbbb",
                "name": "Thomas Nield"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5700,
                    "name": "Data Science"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          },
          {
            "id": "41943",
            "title": "Building Data Science Workflows with Kotlin",
            "description": "Kotlin's language design and its great tooling provide a wonderful framework for data science. Still evolving are libraries for convenient and _kotlin-esque_ table manipulation and reporting.\r\n\r\nIn this session I would like to present the design and features of `krangl`, which is a {K}otlin DSL for data w{rangl}ing. By mimicking well established concepts from pandas and R, it implements a grammar of data manipulation using a modern functional-style API. It allows to filter, transform, aggregate and reshape tabular data. Clearly static types are preferable when using Kotlin, but very often data is fluent and has no immediate type. To bridge this gap, `krangl` provides means to toggle between typed and untyped data.\r\n\r\nAs an example, we will discuss how to compete at kaggle with workflows written in Kotlin. To facilitate that, we will use Jupyter to convert Kotlin scripts into HTML/notebooks.",
            "startsAt": "2018-10-04T14:00:00",
            "endsAt": "2018-10-04T14:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "384596a7-b0ab-4484-8f1b-98d0dcae22b0",
                "name": "Holger Brandl"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5700,
                    "name": "Data Science"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5702,
                    "name": "Scripting"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          },
          {
            "id": "21909",
            "title": "Beat the high-score: build a game using libGDX and Kotlin",
            "description": "Playing games is fun but making games is even better, especially with Kotlin and libGDX.\r\nLet's build together a breakout game and let's explore the gaming framework libGDX. \r\n\r\nThis session will show some libGDX's concepts: how to draw and animate elements of our game, how collision system works to destroy our bricks, what Kotlin brings to libGDX. Then we will dive into more advanced topics like shaders, in order to handle pixels from our images. Why are we doing all of this? To break the high score, of course!",
            "startsAt": "2018-10-04T15:15:00",
            "endsAt": "2018-10-04T16:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "cd740647-ad2c-461c-9d31-c2aafd889481",
                "name": "David Wursteisen"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5701,
                    "name": "Other"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5693,
                    "name": "Desktop"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          },
          {
            "id": "42141",
            "title": "Atlas and Peon - Dependency Visualization and Management with Kotlin/JS",
            "description": "When I spoke at KotlinConf `17, I presented on how we have adopted Kotlin at Hootsuite, the culture that facilitated that adoption as well as the details of our journey. \r\n\r\nA side story from that presentation that ended up generating many questions from the audience both after the talk, and since returning from the conference were our tools, Atlas and Peon. \r\n\r\nAtlas\r\n\r\nAtlas is a tool which we use at Hootsuite to visualize dependency graphs for our Kotlin/Java Android codebase, our ObjectiveC/Swift iOS codebase, and our Scala backend codebase. Originally written in Ruby, it has been rewritten in Kotlin/JS. Atlas scrapes Github for build files for Gradle, Carthage, and SBT. It then parses the build files and generates a dependency graph from them. The dependency graph can then be visualized as a PNG using graphviz or it can feed the graph to our Peon tool. Atlas is built to be extensible, each build system implements a generic worker interface.\r\n\r\nAtlas has been indispensable in development at Hootsuite, assisting in onboarding new developers, diagnosing bugs, and much more. I am very excited to finally Open Source the tool as a Kotlin/JS project and to dive deep into it for KotlinConf attendees so that they can use it in their own projects or even extend it to new build systems.\r\n\r\nPeon\r\n\r\nPeon was written because the Android team at Hootsuite was tired of bumping versions of libraries, both internal and external, and then cascading those changes up a dependency graph. Peon takes the dependency graph output of Atlas and then makes changes to the graph in an intelligent, and topologically aware, manner. Peon was also originally implemented in Ruby but is currently being rewritten in Kotlin/JS.\r\n\r\nPeon takes in a list of libraries to be updated in the graph. You can use it to update the version of Kotlin in all our projects or to bump a version of an external library. You can also use it to propagate changes to an internal library to the rest of the graph.\r\n\r\nSince deploying it at Hootsuite, Peon has saved hundred of developer hours. Peon will be released as an Open Source Kotlin/JS project prior to KotlinConf so that we can dive deep into this tool and attendees can integrate it with their own workflows.\r\n\r\nI am very excited to lead this talk, diving deep into both of these tools which are used daily at Hootsuite. I am especially interested in sharing the project with others so that they can save time on their own projects and teams. \r\n\r\nI am also interested in sharing my experience with Kotlin/JS, especially converting a Ruby project to Kotlin/JS. The benefits of the Kotlin type system for example, were immediately apparent, both within the project and when integrating with other Javascript libraries.",
            "startsAt": "2018-10-04T16:15:00",
            "endsAt": "2018-10-04T17:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "d9ed6481-ed7c-4f7d-9cfc-b993efa43be0",
                "name": "Neil Power"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5699,
                    "name": "Case Studies"
                  },
                  {
                    "id": 5702,
                    "name": "Scripting"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          },
          {
            "id": "21914",
            "title": "Building a Browser Extension with Kotlin",
            "description": "Kotlin has seen a fast adoption on platforms like Android or Server where the code is compiled to Java bytecode. However, as Kotlin also supports compilation to Javascript, the language is starting to receive attention in the Web ecosystem as well.\r\n\r\nIn this talk we will explore how Kotlin JS can be used to write typesafe browser extensions. To achieve this, we rely on external declarations of the browser API produced by a generator, also written in Kotlin.\r\n\r\nThe first part of the talk deals with writing a mini-compiler for generating the API declarations. It touches on preprocessing and code generating techniques.\r\n\r\nIn the second part, a live coding session, a small browser extension is developed. We take a look at the project format and build tools involved. Finally, we see how the previously generated declarations help us to write our extension in a type-safe way while receiving help from the IDE.",
            "startsAt": "2018-10-04T17:15:00",
            "endsAt": "2018-10-04T18:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "b084b9e3-957a-4d45-b14e-d886900a9321",
                "name": "Kirill Rakhman"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5695,
                    "name": "Web"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          }
        ],
        "hasOnlyPlenumSessions": false
      },
      {
        "id": 2204,
        "name": "Verwey kamer",
        "sessions": [
          {
            "id": "914bd339-5056-4388-b92a-c907ef3397ea",
            "title": "Big Nerd Ranch QA",
            "description": null,
            "startsAt": "2018-10-04T10:15:00",
            "endsAt": "2018-10-04T11:00:00",
            "isServiceSession": true,
            "isPlenumSession": false,
            "speakers": [],
            "categories": [],
            "roomId": 2204,
            "room": "Verwey kamer"
          },
          {
            "id": "64132",
            "title": "[Code Lab] Kotlin Interop",
            "description": "One of Kotlin’s most significant features is that it interoperates with Java. We’ll show off patterns that should you follow and avoid in both Kotlin in Java to make your interoperability experience a breeze.\r\n",
            "startsAt": "2018-10-04T11:15:00",
            "endsAt": "2018-10-04T12:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "e62a65a8-f7d5-4cca-b555-8de41591e2f7",
                "name": "Big Nerd Ranch"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2204,
            "room": "Verwey kamer"
          },
          {
            "id": "6e9cac53-b546-4476-914e-7a259bb3988c",
            "title": "Big Nerd Ranch Office Hours",
            "description": null,
            "startsAt": "2018-10-04T13:00:00",
            "endsAt": "2018-10-04T13:45:00",
            "isServiceSession": true,
            "isPlenumSession": false,
            "speakers": [],
            "categories": [],
            "roomId": 2204,
            "room": "Verwey kamer"
          },
          {
            "id": "64128",
            "title": "[Code Lab] Getting Started with Kotlin/Native",
            "description": "You’ve heard about Kotlin/Native, but how can you start developing for it? You’ll configure you Kotlin/Native development environment in a hands-on setting.",
            "startsAt": "2018-10-04T14:00:00",
            "endsAt": "2018-10-04T14:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "bedfda4e-8d5f-4edf-9932-562fb55503e9",
                "name": "Big Nerd Ranch"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5693,
                    "name": "Desktop"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2204,
            "room": "Verwey kamer"
          },
          {
            "id": "33d09459-bf1b-49ac-80d3-a6d1b993faef",
            "title": "Big Nerd Ranch QA",
            "description": null,
            "startsAt": "2018-10-04T15:15:00",
            "endsAt": "2018-10-04T16:00:00",
            "isServiceSession": true,
            "isPlenumSession": false,
            "speakers": [],
            "categories": [],
            "roomId": 2204,
            "room": "Verwey kamer"
          },
          {
            "id": "2f3ba19d-296a-443b-a180-998d3253580f",
            "title": "Big Nerd Ranch QA",
            "description": null,
            "startsAt": "2018-10-04T16:15:00",
            "endsAt": "2018-10-04T17:00:00",
            "isServiceSession": true,
            "isPlenumSession": false,
            "speakers": [],
            "categories": [],
            "roomId": 2204,
            "room": "Verwey kamer"
          },
          {
            "id": "64130",
            "title": "[Code Lab] Leveling up with Exercism",
            "description": "Learn how to use Exercism to expand your knowledge of Kotlin programming, guided by tests. We'll work through problems and share solutions in this interactive session.",
            "startsAt": "2018-10-04T17:15:00",
            "endsAt": "2018-10-04T18:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "aa247549-b518-4168-9575-a5f790341405",
                "name": "Big Nerd Ranch"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2204,
            "room": "Verwey kamer"
          }
        ],
        "hasOnlyPlenumSessions": false
      }
    ],
    "timeSlots": [
      {
        "slotStart": "07:30:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "58244c84-016f-4254-9f3f-3dadf8e43a16",
              "title": "Registration",
              "description": null,
              "startsAt": "2018-10-04T07:30:00",
              "endsAt": "2018-10-04T09:00:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "09:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "44708",
              "title": "Keynote",
              "description": "Conference Opening Keynote",
              "startsAt": "2018-10-04T09:00:00",
              "endsAt": "2018-10-04T10:00:00",
              "isServiceSession": false,
              "isPlenumSession": true,
              "speakers": [
                {
                  "id": "9671b9b6-771a-4df2-b800-1298c43b0a3b",
                  "name": "Andrey Breslav"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "10:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "a8f11cb8-e454-44f2-a80f-a2f9dde7cef5",
              "title": "Break",
              "description": null,
              "startsAt": "2018-10-04T10:00:00",
              "endsAt": "2018-10-04T10:15:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "10:15:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "42130",
              "title": "A Multiplatform Delight",
              "description": "SQL Delight, a type-safe database API, recently completed migration from being a Java-generating, Android-specific tool to a Kotlin-generating, multiplatform one. Migrating an API from Java to Kotlin has obvious benefits, but adding multiplatform support for iOS introduces a dynamic which complicates the API, code generation, and runtime.\r\n\r\nThis talk will cover the challenges of platform-agnostic API design, type-safe multiplatform Kotlin code generation, and the integration of platform-specific runtimes such that the library not only runs efficiently on each platform but also integrates well with the other languages each might be using.",
              "startsAt": "2018-10-04T10:15:00",
              "endsAt": "2018-10-04T11:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "3eabdd46-6cb5-4083-9eb8-1ad9a3b7a5eb",
                  "name": "Jake Wharton"
                },
                {
                  "id": "6789439c-c425-4179-97b7-ccc21476ea6f",
                  "name": "Alec Strong"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "40652",
              "title": "Next Level DSLs",
              "description": "Configure your app the Kotlin way!\r\n\r\nAaron will walk you through the design of a pluggable app architecture, all driven by an expansive domain-specific language executed at run-time.\r\n\r\nHeavily inspired by the structure of build.gradle, this talk will demonstrate how you can push your configuration logic into a type-safe, declarative, and convenient format.",
              "startsAt": "2018-10-04T10:15:00",
              "endsAt": "2018-10-04T11:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "9e69a295-d063-4826-a2b0-b95943cfbfa2",
                  "name": "Aaron Sarazan"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5704,
                      "name": "Functional"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5692,
                      "name": "Server"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "42004",
              "title": "Dissecting the stdlib",
              "description": "One of the best places to learn idiomatic Kotlin is the stdlib. Now I don’t mean just using the stdlib but going to the source, literally. In this session, we’ll look at some of the methods and tools inside the stdlib and dig into how they’re written to reveal intermediate to advanced language features, slick syntax and conventions, and high-level abstractions to help you write more fluent objects and interfaces. We’ll also take a few glances at the underlying bytecode to understand how and why the features work the way they do.",
              "startsAt": "2018-10-04T10:15:00",
              "endsAt": "2018-10-04T11:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "2d41d3fb-3321-4b47-a401-ae84a5de2423",
                  "name": "Huyen Tue Dao"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "42047",
              "title": "Komparing Kotlin Server Frameworks",
              "description": "An overview of what you should look for when trying to find a framework for your Kotlin server backend.  We'll compare a few of the frameworks that are written in Kotlin with frameworks that  support Kotlin.  And we'll find out how \"Kotlin support\" can improve backend code.",
              "startsAt": "2018-10-04T10:15:00",
              "endsAt": "2018-10-04T11:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "dfc3dc33-2505-4098-a12e-e3d6bdfa8a23",
                  "name": "Ken Yee"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5692,
                      "name": "Server"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5705,
                      "name": "Concurrent"
                    },
                    {
                      "id": 5695,
                      "name": "Web"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "914bd339-5056-4388-b92a-c907ef3397ea",
              "title": "Big Nerd Ranch QA",
              "description": null,
              "startsAt": "2018-10-04T10:15:00",
              "endsAt": "2018-10-04T11:00:00",
              "isServiceSession": true,
              "isPlenumSession": false,
              "speakers": [],
              "categories": [],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      },
      {
        "slotStart": "11:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "719b926a-079c-487e-9734-725261c91126",
              "title": "Break",
              "description": null,
              "startsAt": "2018-10-04T11:00:00",
              "endsAt": "2018-10-04T11:15:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "11:15:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "42172",
              "title": "Type-safe build logic with Gradle Kotlin DSL",
              "description": "As of Gradle 5.0, you can now author your build scripts in Kotlin. You will discover a much richer IDE experience through editor assistance, better refactoring and debugging.\r\n\r\nIn this live coding session, we will walk through several Groovy-based build examples and convert them to Kotlin: demonstrating Gradle Kotlin DSL features and best practices so that you can take your build to the next level.",
              "startsAt": "2018-10-04T11:15:00",
              "endsAt": "2018-10-04T12:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "ebc612d5-a764-46b6-8524-0adb9638dd5c",
                  "name": "Paul Merlin"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5703,
                      "name": "Ops"
                    },
                    {
                      "id": 5702,
                      "name": "Scripting"
                    },
                    {
                      "id": 10286,
                      "name": "_msp"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "44032",
              "title": "Graphics Programming with Kotlin",
              "description": "Graphics programming is a field dominated by traditional languages like C and C++, or specialized languages like GLSL and HLSL. In this talk, we'll go over how Kotlin allows you to take advantage of a managed language while preserving the conciseness and expressiveness of low-level languages like C++ when writing math and graphics oriented code.",
              "startsAt": "2018-10-04T11:15:00",
              "endsAt": "2018-10-04T12:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "152f613f-841b-407d-9a65-3703ec2dfae2",
                  "name": "Romain Guy"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5693,
                      "name": "Desktop"
                    },
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5699,
                      "name": "Case Studies"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "41106",
              "title": "Kotlin and Spring Boot, a match made in heaven",
              "description": "Despite being quite “new”, Spring Boot has seen a spectacular start as an amazing kickstarter for Spring-based application. You can now start your project in a matter of minutes, not days!\r\n\r\nOn the other hand, you’re still using Java, with all its ceremony regarding code… Wouldn’t it be great if we could pair Spring Boot with a powerful yet simple language?\r\n\r\nIn this talk, I’ll live code a Spring Boot application using Kotlin. Come discover how you can now cut through all the red tape and finally focus only the important stuff.",
              "startsAt": "2018-10-04T11:15:00",
              "endsAt": "2018-10-04T12:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "9c904945-768e-4597-b942-6be90cf4d731",
                  "name": "Nicolas Frankel"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5692,
                      "name": "Server"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "41950",
              "title": "Live Coding Kotlin/Native Snake",
              "description": "This is a live coding session in which the classic snake game will be coded live from scratch. You will see how to build Kotlin/Native projects, use C libraries from Kotlin, do memory management, native UI, unit testing and, of course, some of the standard Kotlin features.",
              "startsAt": "2018-10-04T11:15:00",
              "endsAt": "2018-10-04T12:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "9aa1160b-ce4f-4992-a1ad-b6da7d62c033",
                  "name": "Dmitry Kandalov"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5693,
                      "name": "Desktop"
                    },
                    {
                      "id": 5701,
                      "name": "Other"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "64132",
              "title": "[Code Lab] Kotlin Interop",
              "description": "One of Kotlin’s most significant features is that it interoperates with Java. We’ll show off patterns that should you follow and avoid in both Kotlin in Java to make your interoperability experience a breeze.\r\n",
              "startsAt": "2018-10-04T11:15:00",
              "endsAt": "2018-10-04T12:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "e62a65a8-f7d5-4cca-b555-8de41591e2f7",
                  "name": "Big Nerd Ranch"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      },
      {
        "slotStart": "12:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "a17035de-9848-4b46-9b3d-6b0272e2a65b",
              "title": "Lunch",
              "description": null,
              "startsAt": "2018-10-04T12:00:00",
              "endsAt": "2018-10-04T13:00:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "13:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "41948",
              "title": "Safe(r) Kotlin Code - Static Analysis tools for Kotlin",
              "description": "When introducing Kotlin to a Java codebase one thing that is often missing from the picture are static analysis tools. \r\n\r\nStatic Analysis suites can give an overview of a codebases health, point out potential issues to make the code safer and can help to keep the codebase in a uniform style. The Java ecosystem already has a broad selection of different static analysis tools each with a different focus.\r\n\r\nTo cater for the different language features and concepts that Kotlin offers most Java focussed static analysis tools are not applicable to Kotlin code.\r\nThis talk will showcase static analysis tools written specifically to improve Kotlin code (and are mostly written in Kotlin themselves). Tools such as detekt, ktlint and Android Lint will be introduced and explored for their use-cases and how they can complement each other.\r\n\r\nAs Marvin is one of the maintainers of detekt he will also share in more detail how detekt works, what it aims to achieve and how the future roadmap looks like for detekt.",
              "startsAt": "2018-10-04T13:00:00",
              "endsAt": "2018-10-04T13:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "e6898269-f378-43f6-a81c-fb2b8bada496",
                  "name": "Marvin Ramin"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5703,
                      "name": "Ops"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "42607",
              "title": "Android Suspenders",
              "description": "So you've read the Coroutines guide and you're ready to start using them in your Android app to coroutines? Great!\r\n \r\nThis talk will focus on the best practices of using coroutines in your app, including how to handle lifecycle changes with Architecture Components, integration with background job processing, and moving away from RxJava.",
              "startsAt": "2018-10-04T13:00:00",
              "endsAt": "2018-10-04T13:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "fd699fd4-ca8a-4b16-a811-cfb7de9e9b1b",
                  "name": "Chris Banes"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5705,
                      "name": "Concurrent"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "22460",
              "title": "GraphQL powered by Kotlin",
              "description": "Description: GraphQL is a query language for your API. This allows you to interact with your existing web services and databases in a new way. Instead of relying on a predetermined output structure from your API, you can \"query\" it and choose only the fields that you're interested in. In this talk, learn what GraphQL is all about and how you can take advantage of it in your applications.\r\n\r\nA few key GraphQL terms we'll cover are:\r\n* Fields/Types\r\n* Variables\r\n* Queries/Mutations\r\n\r\nWe're going to explore how you can create a GraphQL Server with a stack written entirely in Kotlin. Then we'll take a look at how you can integrate the Apollo Client library inside of a Kotlin-powered Android application. GraphQL isn't going away, so here's your chance to get a grip on this exciting technology!",
              "startsAt": "2018-10-04T13:00:00",
              "endsAt": "2018-10-04T13:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "7696a516-13da-40d7-bf15-70dda1317955",
                  "name": "Annyce Davis"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5692,
                      "name": "Server"
                    },
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "33530",
              "title": "Mathematical Modeling with Kotlin",
              "description": "\r\nAs programmers, we love solving problems. However, sometimes we need more than programmer grit to solve many problems with no easy answer. Suppose you need to tightly schedule 190 classes in 20 classrooms, with different class durations, recurrences, and constraints throughout the week? What about minimizing the operating cost of a train schedule while maintaining a steady movement of passengers? How about anticipating an industry competitor's move? Or simply solving a Sudoku?\r\n\r\nMathematical modeling is the workhorse of data science, machine learning, and operations research. By effectively expressing mathematical concepts in code, you can gracefully find solutions to a broad category of problems and avoid impractical brute-force techniques. Even better, Kotlin's pragmatic language features allow clearer and more refactorable models that can safely evolve and be put in production.\r\n\r\nCome to this session to see live examples of Kotlin mathematical models to solve real-world problems like discrete optimization, Bayesian techniques, and artificial neural networks.\r\n",
              "startsAt": "2018-10-04T13:00:00",
              "endsAt": "2018-10-04T13:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "e41e5302-d93c-4bbd-a7b4-761b0139bbbb",
                  "name": "Thomas Nield"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5700,
                      "name": "Data Science"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "6e9cac53-b546-4476-914e-7a259bb3988c",
              "title": "Big Nerd Ranch Office Hours",
              "description": null,
              "startsAt": "2018-10-04T13:00:00",
              "endsAt": "2018-10-04T13:45:00",
              "isServiceSession": true,
              "isPlenumSession": false,
              "speakers": [],
              "categories": [],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      },
      {
        "slotStart": "13:45:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "d04740df-c437-46dc-a0f0-f05ebd7724c1",
              "title": "Break",
              "description": null,
              "startsAt": "2018-10-04T13:45:00",
              "endsAt": "2018-10-04T14:00:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "14:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "36869",
              "title": "Annotation Processing in a Kotlin World",
              "description": "Annotation processing is a powerful tool to extend your codebase at build time, and the advent of Kotlin in the android community introduces a dimension to this. Kapt works with existing Java processors, but it doesn’t come without its quirks at the interop layer. This talk will dive into how you can leverage Kotlin bytecode’s @Metadata annotations to better understand Kotlin code during annotation processing, covering anywhere from case studies in Dagger and Moshi to leveraging tools like KotlinPoet to even generate Kotlin code that seamlessly leverages language features.",
              "startsAt": "2018-10-04T14:00:00",
              "endsAt": "2018-10-04T14:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "8ce6cf3a-735e-4a2a-b05f-e2081e5b6741",
                  "name": "Zac Sweers"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5671,
                      "name": "Advanced"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5693,
                      "name": "Desktop"
                    },
                    {
                      "id": 5702,
                      "name": "Scripting"
                    },
                    {
                      "id": 5701,
                      "name": "Other"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "41120",
              "title": "Architecting a Kotlin JVM and JS multiplatform project",
              "description": "Kotlin multiplatform support is a powerful feature that allows us to share code between multiple projects across platforms where it wasn't previously simple or even possible. On this talk we'll explore how to take advantage of this feature by dissecting a project that uses concepts like expect/actual keywords, expectedBy, typealiases, javascript interop and more. By the end, attendees will have a solid understanding of how to get started and build their own Kotlin projects leveraging multiplatform support and code sharing.",
              "startsAt": "2018-10-04T14:00:00",
              "endsAt": "2018-10-04T14:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "3536b891-c1c7-41f8-9882-eeb1288a4212",
                  "name": "Felipe Lima"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5692,
                      "name": "Server"
                    },
                    {
                      "id": 5695,
                      "name": "Web"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "35700",
              "title": "Functional CQRS in Kotlin",
              "description": "This presentation will be using live coding to show how to implement and implement a CQRS architecture using functional abstractions, pure functions and immutable data using Kotlin as language.\r\nCQRS concepts go very well together with functional programming principles of immutability and high level functions.\r\nParticipants don't have to know Kotlin or functional programming but the knowledge can be beneficial.\r\nThe session will try to capture the main architecture critical decision in implementing a cqrs application. We also believe that using a functional approach simplify the code and avoid some typical pitfalls in event store implementations. Of course it can bring to other problems so we will discuss those as well.",
              "startsAt": "2018-10-04T14:00:00",
              "endsAt": "2018-10-04T14:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "75e55cce-5747-401e-a1f5-d6a86bb5784d",
                  "name": "Uberto Barbini"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5692,
                      "name": "Server"
                    },
                    {
                      "id": 5704,
                      "name": "Functional"
                    },
                    {
                      "id": 5698,
                      "name": "Enterprise"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "41943",
              "title": "Building Data Science Workflows with Kotlin",
              "description": "Kotlin's language design and its great tooling provide a wonderful framework for data science. Still evolving are libraries for convenient and _kotlin-esque_ table manipulation and reporting.\r\n\r\nIn this session I would like to present the design and features of `krangl`, which is a {K}otlin DSL for data w{rangl}ing. By mimicking well established concepts from pandas and R, it implements a grammar of data manipulation using a modern functional-style API. It allows to filter, transform, aggregate and reshape tabular data. Clearly static types are preferable when using Kotlin, but very often data is fluent and has no immediate type. To bridge this gap, `krangl` provides means to toggle between typed and untyped data.\r\n\r\nAs an example, we will discuss how to compete at kaggle with workflows written in Kotlin. To facilitate that, we will use Jupyter to convert Kotlin scripts into HTML/notebooks.",
              "startsAt": "2018-10-04T14:00:00",
              "endsAt": "2018-10-04T14:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "384596a7-b0ab-4484-8f1b-98d0dcae22b0",
                  "name": "Holger Brandl"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5700,
                      "name": "Data Science"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5702,
                      "name": "Scripting"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "64128",
              "title": "[Code Lab] Getting Started with Kotlin/Native",
              "description": "You’ve heard about Kotlin/Native, but how can you start developing for it? You’ll configure you Kotlin/Native development environment in a hands-on setting.",
              "startsAt": "2018-10-04T14:00:00",
              "endsAt": "2018-10-04T14:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "bedfda4e-8d5f-4edf-9932-562fb55503e9",
                  "name": "Big Nerd Ranch"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5693,
                      "name": "Desktop"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      },
      {
        "slotStart": "14:45:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "4b5e6f09-eddf-414e-a1ae-7a449e8dec85",
              "title": "Afternoon Break",
              "description": null,
              "startsAt": "2018-10-04T14:45:00",
              "endsAt": "2018-10-04T15:15:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "15:15:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "33626",
              "title": "Exploring the Kotlin type hierarchy from top to bottom",
              "description": "Coming from Java, Kotlin's type system can appear quite daunting: nullable types, Unit, Nothing, Any, variance specifiers, function types, and more. But don't panic! Kotlin's type hierarchy is actually simple – it has very few rules to learn and those rules combine together consistently and predictably. Thanks to those rules, Kotlin useful language features, such as null safety and unreachable code analysis, do not rely on special cases that you must memorise, or ad-hoc checks in the compiler and IDE that stop working when your code gets too complicated.\r\n\r\nIn this talk Nat will take you on a tour of Kotlin's type hierarchy and demonstrate how to use it to model your application domains, using example code taken from real projects.",
              "startsAt": "2018-10-04T15:15:00",
              "endsAt": "2018-10-04T16:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "30cc8bd5-49a1-4609-bf70-ff5e6b12b3c2",
                  "name": "Nat Pryce"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5701,
                      "name": "Other"
                    },
                    {
                      "id": 5704,
                      "name": "Functional"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "63188",
              "title": "Kotlin/Native concurrency model",
              "description": "Kotlin/Native runtime is designed to minimize possible programmers mistakes related to concurrency and undesired mutable state. To achieve this goal, while keeping the source-level compatibility with Kotlin,  runtime and standard library was carefully designed to avoid concurrently accessible mutable state. In this talk we will discuss both reasoning behind this design, design and implementation details of the runtime and compiler. Also generic topics of automated memory management in the compiled language are covered.",
              "startsAt": "2018-10-04T15:15:00",
              "endsAt": "2018-10-04T16:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "315ddf57-03bf-4c09-a190-ce82cc06f7ec",
                  "name": "Nikolay Igotti"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "41262",
              "title": "Writing Your First Kotlin Compiler Plugin",
              "description": "The Kotlin compiler plugin API gives us powerful features like Parcelize and the synthetic view accessor methods in kotlinx.android. These features could not be built using similar, but more limited, mechanisms, such as annotation processing.\r\n\r\nThe Kotlin compiler plugin API is not currently well-documented, but that doesn't mean that it can't be explored! In this talk, we will start from scratch and show how we can build a compiler plugin and deploy an artifact to a public location, so that we can build plugins that can be applied as easily as the official compiler plugins.",
              "startsAt": "2018-10-04T15:15:00",
              "endsAt": "2018-10-04T16:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "d471ff1a-f7cd-4ce6-bb5e-f9a2f1db0fe5",
                  "name": "Kevin Most"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5671,
                      "name": "Advanced"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5701,
                      "name": "Other"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "21909",
              "title": "Beat the high-score: build a game using libGDX and Kotlin",
              "description": "Playing games is fun but making games is even better, especially with Kotlin and libGDX.\r\nLet's build together a breakout game and let's explore the gaming framework libGDX. \r\n\r\nThis session will show some libGDX's concepts: how to draw and animate elements of our game, how collision system works to destroy our bricks, what Kotlin brings to libGDX. Then we will dive into more advanced topics like shaders, in order to handle pixels from our images. Why are we doing all of this? To break the high score, of course!",
              "startsAt": "2018-10-04T15:15:00",
              "endsAt": "2018-10-04T16:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "cd740647-ad2c-461c-9d31-c2aafd889481",
                  "name": "David Wursteisen"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5701,
                      "name": "Other"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5693,
                      "name": "Desktop"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "33d09459-bf1b-49ac-80d3-a6d1b993faef",
              "title": "Big Nerd Ranch QA",
              "description": null,
              "startsAt": "2018-10-04T15:15:00",
              "endsAt": "2018-10-04T16:00:00",
              "isServiceSession": true,
              "isPlenumSession": false,
              "speakers": [],
              "categories": [],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      },
      {
        "slotStart": "16:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "21a7d343-c18d-4cad-b672-ae6f671f85ce",
              "title": "Break",
              "description": null,
              "startsAt": "2018-10-04T16:00:00",
              "endsAt": "2018-10-04T16:15:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "16:15:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "42214",
              "title": "Shaping your app’s architecture with Kotlin and Architecture Components",
              "description": "Many apps began adopting Kotlin and Android Architecture Components atthe same time. While ostensibly quite different, the interplay of these two changes ends up heavily influencing each other. \r\n\r\nPlaid is an open source example of material design concepts. It has a  complex functionality but had a large amount of technical debt. We took the challenge of refactoring the app, following the Android Guide to App Architecture, while simultaneously converting the app to Kotlin—while keeping the existing functionality, fixing broken API integrations and adding new ones. \r\n\r\nThe Guide to App Architecture provided a good starting point for creating lean, isolated classes. Kotlin features like delegates, high order functions and lambdas, sealed classes and others, end up shaping much of the architecture of the app. This talk covers the architecture lessons learned while converting Plaid to Kotlin and integrating Architecture Components.",
              "startsAt": "2018-10-04T16:15:00",
              "endsAt": "2018-10-04T17:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "3b7c5574-4d74-4529-9d3f-d058f302fea1",
                  "name": "Florina Muntenescu"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "45353",
              "title": "New Type Inference and Related Language Features",
              "description": "The new reworked type inference engine of Kotlin brings many new features that can be tried in experimental mode in 1.3. Besides just getting smarter and more predictable, this also brings a powerful data flow contract facility and some annotations to provide useful hints for type inference. This talk will provide a deep dive into the Kotlin type inference and what it will bring us in future versions.",
              "startsAt": "2018-10-04T16:15:00",
              "endsAt": "2018-10-04T17:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "0f769b19-d5f2-49fb-aa78-a086aa046b7e",
                  "name": "Svetlana Isakova"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5671,
                      "name": "Advanced"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "39157",
              "title": "Server as a Function in Kotlin",
              "description": "In this talk, you'll learn about how we successfully rewrote the website of a major scientific publisher to pure Kotlin, serving millions of daily requests and in the process created the open source http4k microservice toolkit.\r\n\r\nThe talk also covers how the team migrated the stack to Continuous Delivery-based deployment into a private on-premise cloud, and how http4k helped us introduce new failure-mode and inter-service contract testing techniques.\r\n\r\nThis approach combines functional programming concepts and the versatility of Kotlin to produce applications that are simpler and more testable than most Java are accustomed to experience. And the best of it: with absolutely no magic!\r\n",
              "startsAt": "2018-10-04T16:15:00",
              "endsAt": "2018-10-04T17:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "4f7b8adb-fd36-4ada-80df-9a6997a7fa04",
                  "name": "Ivan Sanchez"
                },
                {
                  "id": "b3f34b70-b68f-4325-8ffe-b599217e1f4c",
                  "name": "David Denton"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5692,
                      "name": "Server"
                    },
                    {
                      "id": 5695,
                      "name": "Web"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5699,
                      "name": "Case Studies"
                    },
                    {
                      "id": 5704,
                      "name": "Functional"
                    },
                    {
                      "id": 10286,
                      "name": "_msp"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "42141",
              "title": "Atlas and Peon - Dependency Visualization and Management with Kotlin/JS",
              "description": "When I spoke at KotlinConf `17, I presented on how we have adopted Kotlin at Hootsuite, the culture that facilitated that adoption as well as the details of our journey. \r\n\r\nA side story from that presentation that ended up generating many questions from the audience both after the talk, and since returning from the conference were our tools, Atlas and Peon. \r\n\r\nAtlas\r\n\r\nAtlas is a tool which we use at Hootsuite to visualize dependency graphs for our Kotlin/Java Android codebase, our ObjectiveC/Swift iOS codebase, and our Scala backend codebase. Originally written in Ruby, it has been rewritten in Kotlin/JS. Atlas scrapes Github for build files for Gradle, Carthage, and SBT. It then parses the build files and generates a dependency graph from them. The dependency graph can then be visualized as a PNG using graphviz or it can feed the graph to our Peon tool. Atlas is built to be extensible, each build system implements a generic worker interface.\r\n\r\nAtlas has been indispensable in development at Hootsuite, assisting in onboarding new developers, diagnosing bugs, and much more. I am very excited to finally Open Source the tool as a Kotlin/JS project and to dive deep into it for KotlinConf attendees so that they can use it in their own projects or even extend it to new build systems.\r\n\r\nPeon\r\n\r\nPeon was written because the Android team at Hootsuite was tired of bumping versions of libraries, both internal and external, and then cascading those changes up a dependency graph. Peon takes the dependency graph output of Atlas and then makes changes to the graph in an intelligent, and topologically aware, manner. Peon was also originally implemented in Ruby but is currently being rewritten in Kotlin/JS.\r\n\r\nPeon takes in a list of libraries to be updated in the graph. You can use it to update the version of Kotlin in all our projects or to bump a version of an external library. You can also use it to propagate changes to an internal library to the rest of the graph.\r\n\r\nSince deploying it at Hootsuite, Peon has saved hundred of developer hours. Peon will be released as an Open Source Kotlin/JS project prior to KotlinConf so that we can dive deep into this tool and attendees can integrate it with their own workflows.\r\n\r\nI am very excited to lead this talk, diving deep into both of these tools which are used daily at Hootsuite. I am especially interested in sharing the project with others so that they can save time on their own projects and teams. \r\n\r\nI am also interested in sharing my experience with Kotlin/JS, especially converting a Ruby project to Kotlin/JS. The benefits of the Kotlin type system for example, were immediately apparent, both within the project and when integrating with other Javascript libraries.",
              "startsAt": "2018-10-04T16:15:00",
              "endsAt": "2018-10-04T17:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "d9ed6481-ed7c-4f7d-9cfc-b993efa43be0",
                  "name": "Neil Power"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5699,
                      "name": "Case Studies"
                    },
                    {
                      "id": 5702,
                      "name": "Scripting"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "2f3ba19d-296a-443b-a180-998d3253580f",
              "title": "Big Nerd Ranch QA",
              "description": null,
              "startsAt": "2018-10-04T16:15:00",
              "endsAt": "2018-10-04T17:00:00",
              "isServiceSession": true,
              "isPlenumSession": false,
              "speakers": [],
              "categories": [],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      },
      {
        "slotStart": "17:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "4f835fe0-6d8a-430c-ad54-5e0aece6cb3e",
              "title": "Break",
              "description": null,
              "startsAt": "2018-10-04T17:00:00",
              "endsAt": "2018-10-04T17:15:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "17:15:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "44706",
              "title": "Representing State: the Kotlin Edition",
              "description": "A core part of any code is the ability to know at any given time the set of conditions that make up its current operations. As developers, we need to know this for a variety of reasons, including because knowing this tells us whether we should be queuing any changes and gives us the ability to return a user to their current experience should the program be interrupted. But despite its crucial nature, codifying the state of an application at any given point in time can often be messy and error prone work. In this talk, we'll look at the reasons representing state can be problematic, and some practical ways we can leverage Kotlin to make it better. This talk is both a theoretical look at how the types we choose influence our ability to validate programs, and a practical exploration of concrete steps we can take to rectify these issues with Kotlin.",
              "startsAt": "2018-10-04T17:15:00",
              "endsAt": "2018-10-04T18:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "161e959e-be4f-4829-88c2-38fc14420785",
                  "name": "Christina Lee"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "22181",
              "title": "Effective multiplatform Kotlin development",
              "description": "Kotlin enables you to write Android, iOS and web applications 100% natively. When you add good architecture, you can achieve enormous code reusage. In this lecture, I will show how you can do it yourself. I will present possibilities of this approach, how to apply clean architecture there and how to unit test it all. ",
              "startsAt": "2018-10-04T17:15:00",
              "endsAt": "2018-10-04T18:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "20d1e1e0-60d3-4b0f-8f82-07e96be00b91",
                  "name": "Marcin Moskała"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5693,
                      "name": "Desktop"
                    },
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5695,
                      "name": "Web"
                    },
                    {
                      "id": 5699,
                      "name": "Case Studies"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "61862",
              "title": "Full Stack Kotlin on Google Cloud!",
              "description": "Kotlin is a great multipurpose programming language. Beyond using Kotlin for developing Android apps, Kotlin can power IoT devices, run backend services, and be used to build rich applications running in the Cloud. We will demonstrate how Kotlin can be used across multiple services on Google Cloud Platform. The components being used are Cloud IoT Core, Google App Engine, Cloud Pub/Sub, and more.\r\n",
              "startsAt": "2018-10-04T17:15:00",
              "endsAt": "2018-10-04T18:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "4f876d50-3255-40e6-88f5-aa4aee028637",
                  "name": "Brent Shaffer"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5692,
                      "name": "Server"
                    },
                    {
                      "id": 5696,
                      "name": "IoT"
                    },
                    {
                      "id": 5695,
                      "name": "Web"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "21914",
              "title": "Building a Browser Extension with Kotlin",
              "description": "Kotlin has seen a fast adoption on platforms like Android or Server where the code is compiled to Java bytecode. However, as Kotlin also supports compilation to Javascript, the language is starting to receive attention in the Web ecosystem as well.\r\n\r\nIn this talk we will explore how Kotlin JS can be used to write typesafe browser extensions. To achieve this, we rely on external declarations of the browser API produced by a generator, also written in Kotlin.\r\n\r\nThe first part of the talk deals with writing a mini-compiler for generating the API declarations. It touches on preprocessing and code generating techniques.\r\n\r\nIn the second part, a live coding session, a small browser extension is developed. We take a look at the project format and build tools involved. Finally, we see how the previously generated declarations help us to write our extension in a type-safe way while receiving help from the IDE.",
              "startsAt": "2018-10-04T17:15:00",
              "endsAt": "2018-10-04T18:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "b084b9e3-957a-4d45-b14e-d886900a9321",
                  "name": "Kirill Rakhman"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5695,
                      "name": "Web"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "64130",
              "title": "[Code Lab] Leveling up with Exercism",
              "description": "Learn how to use Exercism to expand your knowledge of Kotlin programming, guided by tests. We'll work through problems and share solutions in this interactive session.",
              "startsAt": "2018-10-04T17:15:00",
              "endsAt": "2018-10-04T18:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "aa247549-b518-4168-9575-a5f790341405",
                  "name": "Big Nerd Ranch"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      },
      {
        "slotStart": "18:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "68f5af49-3b0d-442e-a7bf-39c97d82dbdc",
              "title": "Party",
              "description": null,
              "startsAt": "2018-10-04T18:00:00",
              "endsAt": "2018-10-04T21:00:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      }
    ]
  },
  {
    "date": "2018-10-05T00:00:00",
    "rooms": [
      {
        "id": 2200,
        "name": "Effectenbeurzaal",
        "sessions": [
          {
            "id": "34112e54-b628-48c5-a1b5-767ab1208b82",
            "title": "Registration",
            "description": null,
            "startsAt": "2018-10-05T08:00:00",
            "endsAt": "2018-10-05T09:00:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "34486",
            "title": "I am a developer at 54",
            "description": "I will talk about how and why I wanted to be an iOS mobile developer at the age of 51. How a 16 year inspired me to learn to code and the challenges I face after becoming an iOS developer being the first self-taught African American woman mobile developer to create a domestic violence app dedicated to helping victims escape abuse and how Apple found me and was highlight at WWDC 2015, 2016 keynote event and I am a developer video. Some people want to believe that people my age are out of touch with technology and as a woman. \r\n",
            "startsAt": "2018-10-05T09:00:00",
            "endsAt": "2018-10-05T10:00:00",
            "isServiceSession": false,
            "isPlenumSession": true,
            "speakers": [
              {
                "id": "ea04cece-9b5b-49b3-8faf-4e3fef18084f",
                "name": "Alicia Carr"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5694,
                    "name": "Mobile"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "441184bd-e66a-476d-b9bc-3312403a6fce",
            "title": "Break",
            "description": null,
            "startsAt": "2018-10-05T10:00:00",
            "endsAt": "2018-10-05T10:15:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "41601",
            "title": "Exploring Coroutines in Kotlin",
            "description": "Coroutines have intrigued programmers for a long time. Some languages of the past implemented coroutines, but programmers using the mainstream languages of recent decades largely did not get much exposure to this programming construct. There's a resurgence of interest for coroutines and some serious work has been done in Kotlin to implement it. We'll take an example oriented approach to learning about the benefits of coroutines and along the way explore this feature of Kotlin.",
            "startsAt": "2018-10-05T10:15:00",
            "endsAt": "2018-10-05T11:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "b576bdc5-c994-40f5-b1dd-e0f9f7999fa9",
                "name": "Venkat Subramaniam"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "47cadfe7-3322-43d5-b19c-9f593af90ff9",
            "title": "Break",
            "description": null,
            "startsAt": "2018-10-05T11:00:00",
            "endsAt": "2018-10-05T11:15:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "21819",
            "title": "Functional Programming in Kotlin with Λrrow",
            "description": "This talk is a comprehensive walkthrough of the most important patterns covered by the data types and type classes we find in Λrrow. Each pattern will be accompanied by code examples that illustrate how Λrrow brings Typed Functional Programming to the Kotlin Programming Language",
            "startsAt": "2018-10-05T11:15:00",
            "endsAt": "2018-10-05T12:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "e48d1ec9-1d3b-41d8-a04f-b3932cbc30c4",
                "name": "Raúl Raja Martínez"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5704,
                    "name": "Functional"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5705,
                    "name": "Concurrent"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "eee384d7-28ce-4051-afc4-28ac0723b526",
            "title": "Lunch",
            "description": null,
            "startsAt": "2018-10-05T12:00:00",
            "endsAt": "2018-10-05T13:00:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "41204",
            "title": "Kotlin Coroutines in Practice",
            "description": "Let's see how Kotlin Coroutines are used to solve real-life concurrency and coordination problems. With coroutines we don't have to worry about shared mutable state and synchronization. We can solve the problems we face using a number of communicating coroutines, where each piece of state is confined to a single coroutine.",
            "startsAt": "2018-10-05T13:00:00",
            "endsAt": "2018-10-05T13:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "844e820d-d54c-49ec-9e4b-e0edc1756eb0",
                "name": "Roman Elizarov"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5705,
                    "name": "Concurrent"
                  },
                  {
                    "id": 5692,
                    "name": "Server"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "840d6e77-6f94-45bb-a3a1-cf541de563a8",
            "title": "Break",
            "description": null,
            "startsAt": "2018-10-05T13:45:00",
            "endsAt": "2018-10-05T14:00:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "41946",
            "title": "10 tips to make libraries Kotlin-friendly",
            "description": "There's plenty out there about how to make Kotlin work well with Java - but what about the reverse? Do you want to appeal more to your Kotlin customers whilst maintaining an idiomatic experience for your Java customers? This session will cover 10(ish) tips and tricks you can apply to your Java library to make it more Kotlin-friendly without sacrificing usability for your Java customers. We'll look at case-studies of real open-source Java libraries and show you techniques you can apply to make your library play nicely within the Kotlin ecosystem.",
            "startsAt": "2018-10-05T14:00:00",
            "endsAt": "2018-10-05T14:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "51768d2d-f074-43b4-bf75-c285b0a62de4",
                "name": "Kyle Thomson"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "0c760239-d228-46e8-9b32-b5eb215c60ef",
            "title": "Afternoon Break",
            "description": null,
            "startsAt": "2018-10-05T14:45:00",
            "endsAt": "2018-10-05T15:15:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "41599",
            "title": "Creating Internal DSLs in Kotlin",
            "description": "Domain Specific Languages (DSLs) are concise, fluent, and carry implicit context. For a language to be used as a host for internal DSLs first it needs to have low ceremony. Then it should provide a way to inject behavior into classes as well. Kotlin has both of those capabilities. In this presentation we will start with a quick discussion of DSLs, their characteristics, and then dive into examples of creating DSLs using the facilities that are native to Kotlin.",
            "startsAt": "2018-10-05T15:15:00",
            "endsAt": "2018-10-05T16:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "b576bdc5-c994-40f5-b1dd-e0f9f7999fa9",
                "name": "Venkat Subramaniam"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5702,
                    "name": "Scripting"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "554a4fe9-db62-4aa2-818b-f093c053be6d",
            "title": "Break",
            "description": null,
            "startsAt": "2018-10-05T16:00:00",
            "endsAt": "2018-10-05T16:15:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "38889",
            "title": "Kotlin puzzlers, vol 2",
            "description": "Kotlin is a marvelous language that makes programming on the JVM fun again. During the design phase of the language, it was said that Kotlin specifically tried to avoid some of the most famous Java Puzzlers. However, having so many advanced features in the language it cannot avoid introducing puzzlers of its own. This talk will present some of the more interesting nuances of syntax or language features with the help of small puzzler programs letting the audience guess their behavior. The mystery will then be revealed with an explanation in a fun way.\r\n\r\nHaving received an overwhelmingly good feedback from the previous year, I am ready with a set of completely new puzzlers to entertain you among all these really serious talks! Don't miss this sequel to one of the highest rated talks of Kotlinconf 2017!",
            "startsAt": "2018-10-05T16:15:00",
            "endsAt": "2018-10-05T17:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "d7dfcb8f-a341-4dd9-9e70-739b76a0fe70",
                "name": "Anton Keks"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5701,
                    "name": "Other"
                  },
                  {
                    "id": 5702,
                    "name": "Scripting"
                  },
                  {
                    "id": 5704,
                    "name": "Functional"
                  },
                  {
                    "id": 5705,
                    "name": "Concurrent"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "24ae9b95-e016-454c-8ddf-6744d1597b00",
            "title": "Break",
            "description": null,
            "startsAt": "2018-10-05T17:00:00",
            "endsAt": "2018-10-05T17:15:00",
            "isServiceSession": true,
            "isPlenumSession": true,
            "speakers": [],
            "categories": [],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          },
          {
            "id": "33656",
            "title": "Closing Panel",
            "description": "You're not going to want to miss the closing panel, where we'll have members of the Kotlin team and the Kotlin community answering the easiest, not so easiest and downright difficult questions! \r\n",
            "startsAt": "2018-10-05T17:15:00",
            "endsAt": "2018-10-05T18:15:00",
            "isServiceSession": false,
            "isPlenumSession": true,
            "speakers": [
              {
                "id": "9ff98d8b-f176-49b9-a871-339cf8fad50b",
                "name": "Jeffrey van Gogh"
              },
              {
                "id": "9671b9b6-771a-4df2-b800-1298c43b0a3b",
                "name": "Andrey Breslav"
              },
              {
                "id": "02695d1e-b965-4549-a3aa-1e002b176bf7",
                "name": "William Cook"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5701,
                    "name": "Other"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2200,
            "room": "Effectenbeurzaal"
          }
        ],
        "hasOnlyPlenumSessions": false
      },
      {
        "id": 2201,
        "name": "Granbeurszaal",
        "sessions": [
          {
            "id": "21936",
            "title": "Painless Microservices with Kotlin",
            "description": "Many will say: \"Building microservices is hard!\". But with the right set of tools, technologies and frameworks it appeared to be not the case. During this session we'll talk about modern microservices in general and how Kotlin helped us. \r\n\r\nWe'll talk about Java Interoperability which allowed us to use all the goods of Java ecosystem. How building different Kotlin DSLs helped us to manage our infrastructure and orchestrate microservices. And finally how to manage this Kotlin code base in an efficient manner.",
            "startsAt": "2018-10-05T10:15:00",
            "endsAt": "2018-10-05T11:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "213b4eae-99e8-4090-b508-4d2c9a85a989",
                "name": "Fedor Korotkov"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5692,
                    "name": "Server"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5703,
                    "name": "Ops"
                  },
                  {
                    "id": 5699,
                    "name": "Case Studies"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          },
          {
            "id": "42118",
            "title": "iOS Architecture with Multiplatform",
            "description": "2018 and 2019 will see a flood of mobile multiplatform libraries for Android and IOS using Kotlin Multiplatform. Mobile developers have had a decade to fine tune state-of-the-art best practice for the Android and iOS platforms. Those libraries will need analogs, and will quickly appear once the tooling and community mature. This talk will be an overview of what major libraries are available, what's coming soon, what libraries somebody desperately needs to build, and best resources on how to get started.",
            "startsAt": "2018-10-05T11:15:00",
            "endsAt": "2018-10-05T12:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "1bdf0b7f-2a71-4d40-a3e1-cb481f328361",
                "name": "Kevin Galligan"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5694,
                    "name": "Mobile"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          },
          {
            "id": "42128",
            "title": "Android KTX: A dash of Kotlin makes all the difference!",
            "description": "When Kotlin hit the Android scene, one of the first things many of us did was wrap difficult-to-use Android Framework APIs with extension functions. That little sprinkle of Kotlin made all the difference, and life was great — we finally we had a way to make our least favorite calls more concise and easier to work with!\r\n\r\nAndroid KTX builds on this same idea and makes them available to everyone. It's a new set of open source Kotlin extensions (maintained by Google) that sits on top of commonly used Framework methods, abstracting much of the complexity and boilerplate away. This vastly improves the conciseness and readability of your code, making it more idiomatic and enjoyable to work with.\r\n\r\nIn this talk we'll start with a brief intro to KTX — what it is, why it's so great, and what it means for us as Android developers. Next we'll take a tour of what extensions are currently available, highlighting some of my favorites. We'll compare the old, hard ways of doing things against the new, friendlier ways that KTX provides so you can clearly see how life with KTX is better! \r\n\r\nBy the end you’ll have a better idea of 1) how you can improve your Android code by using KTX in your daily work and 2) what well-designed extension methods look like so you can wrap/extend the Android framework for your own use (or to contribute back into KTX!)\f",
            "startsAt": "2018-10-05T13:00:00",
            "endsAt": "2018-10-05T13:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "36b53fcf-430a-4425-ac8c-d1a36263b612",
                "name": "Dan Kim"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5694,
                    "name": "Mobile"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          },
          {
            "id": "41109",
            "title": "Best Practices for Unit Testing in Kotlin",
            "description": "Unit Testing in Kotlin is fun and tricky at the same time. We can benefit a lot from Kotlin's powerful language features to write readable and concise unit tests. But in order to write idiomatic Kotlin test code in the first place, there is a certain test setup required. We'll talk about test lifecycles, mocking challenges, proper assertion libraries, the power of data classes and about spring integration. This talk contains best practices and guidelines to write unit test code in Kotlin that is idiomatic, readable, concise and produces reasonable failure messages.",
            "startsAt": "2018-10-05T14:00:00",
            "endsAt": "2018-10-05T14:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "cfc62379-558d-49f1-a635-27f2f0290718",
                "name": "Philipp Hauer"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5692,
                    "name": "Server"
                  },
                  {
                    "id": 5693,
                    "name": "Desktop"
                  },
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5695,
                    "name": "Web"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          },
          {
            "id": "42182",
            "title": "Coroutines and Reactive Programming - friends or foes?",
            "description": "Coroutines may be seen as a replacement of reactive programming. Both of them offer the possibility to create asynchronous applications although in a very different way.\r\nDoes it still make sense to use reactive programming in Kotlin? Or can we just stick with coroutines and forget all about other asynchronous applications approaches?\r\nOr maybe we can mix both of them, take their best parts and come up with a solution which is superior to any of the two?\r\n\r\nIn this session we'll learn the differences between coroutines and reactive programming. We'll see when one shines and the other... is not so great. We'll look under the hood \r\nto find out the reasons behind some design decisions and how those decisions affect performance and interoperability. We'll try to decide when we should use coroutines\r\nand when the reactive programming model is better.",
            "startsAt": "2018-10-05T15:15:00",
            "endsAt": "2018-10-05T16:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "85cab1b6-a362-412a-b855-4e1027cf54fd",
                "name": "Konrad Kamiński"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5671,
                    "name": "Advanced"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5704,
                    "name": "Functional"
                  },
                  {
                    "id": 5705,
                    "name": "Concurrent"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          },
          {
            "id": "41590",
            "title": "Sealed classes opened my mind - How we use Kotlin to tame state at Etsy",
            "description": "The talk explores using sealed classes to represent state via an event stream and how we can take filtered views of it while still maintaining the exhaustiveness of `when`.\r\nThe talk would follow the concepts outlined in my post here: \r\nhttps://codeascraft.com/2018/04/12/sealed-classes-opened-my-mind/\r\n\r\nAdditionally it would explore how to use RxJava to emit these events and how to use when and filterIsInstance to react to them.  \r\n\r\nThere will also be a section on how Java's instanceof was often considered a poor practice and the (sometimes painful) indirection of polymorphic solutions like the visitor pattern.  And finally how Kotlin makes all that pain go away.",
            "startsAt": "2018-10-05T16:15:00",
            "endsAt": "2018-10-05T17:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "c66e2690-d819-439d-932f-8ff45454568b",
                "name": "Patrick Cousins"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5704,
                    "name": "Functional"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2201,
            "room": "Granbeurszaal"
          }
        ],
        "hasOnlyPlenumSessions": false
      },
      {
        "id": 2202,
        "name": "Berlagezaal",
        "sessions": [
          {
            "id": "41570",
            "title": "Making Noise with Kotlin/Native",
            "description": "Making Noise with Kotlin/Native\r\n\r\nKotlin/Native lets you reach beyond the JVM, and into the world of hardware.\r\nIn this talk we will use Kotlin/Native to create a hardware audio synthesizer.\r\nYou will learn how to interface with C++ libraries and compile and deploy Kotlin to embedded systems. We will explore the state of the current Kotlin/Native ecosystem and what it provides.\r\nThe result will be something we can jam with, Kotlin/Native-style!",
            "startsAt": "2018-10-05T10:15:00",
            "endsAt": "2018-10-05T11:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "72065026-0b59-400c-95c2-3e080ba22bff",
                "name": "Josh Skeen"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5701,
                    "name": "Other"
                  },
                  {
                    "id": 5696,
                    "name": "IoT"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          },
          {
            "id": "38447",
            "title": "Datomic - the most innovative DB you've never heard of",
            "description": "Datomic is a strange database. The writer is single threaded. It writes to other databases and has no storage of its own. It has a completely different API for reads and writes. Queries runs on the client, not the server. Time travel is built in, and you can query the history of your database.\r\n\r\nIn this talk, you'll learn where Datomic fits and for which use cases the above are good ideas, how Datomic actually invented very little and stands on the shoulders of BigTable and VoltDB, all using Kotlin, of course :)",
            "startsAt": "2018-10-05T11:15:00",
            "endsAt": "2018-10-05T12:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "91fa2bcc-0baa-4966-95b0-fb4985a68550",
                "name": "August Lilleaas"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5671,
                    "name": "Advanced"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5692,
                    "name": "Server"
                  },
                  {
                    "id": 5704,
                    "name": "Functional"
                  },
                  {
                    "id": 5705,
                    "name": "Concurrent"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          },
          {
            "id": "41725",
            "title": "Building Server Backends with Ktor",
            "description": "Using Ktor from JetBrains, you can build your server backend using familiar Kotlin syntax and features like coroutines. Ktor works with standard servlet containers, including Google's App Engine, which will host and scale your backend automatically.\r\n\r\nThis talk will be a practical guide to building a cost effective in app purchase verification backend for your app using Ktor on Google App Engine.  From here, it's easy to expand your backend and share code between your client and server, making maintenance and development faster and easier.",
            "startsAt": "2018-10-05T13:00:00",
            "endsAt": "2018-10-05T13:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "f1275dc9-492b-4ab1-b31b-3e19bccde628",
                "name": "Ryan Harter"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5692,
                    "name": "Server"
                  },
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          },
          {
            "id": "41878",
            "title": "Learn together. Not the same",
            "description": "Adopting Kotlin is a great opportunity to learn something new as a team. When learning we tried different approaches - from an hour of learning Kotlin, to improving our code reviews to focus on learning.\r\n\r\nLast year our team made the leap to using Kotlin in production - what worked? What didn’t? How did we keep the collaboration momentum going?\r\n\r\nHear about how learning a new language as a team made us more open to asking questions, admitting things we didn’t know, prevented imposter syndrome and improved our engineering culture, process and code.",
            "startsAt": "2018-10-05T14:00:00",
            "endsAt": "2018-10-05T14:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "3d4b5098-0829-4b34-b0bf-122ab126fdae",
                "name": "Maria Neumayer"
              },
              {
                "id": "ab1a4453-1a4e-45da-af4e-9428b12d0cbe",
                "name": "Amal Kakaiya"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5699,
                    "name": "Case Studies"
                  },
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 10286,
                    "name": "_msp"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          },
          {
            "id": "42114",
            "title": "What's the big IDEA? Writing IntelliJ plugins for Kotlin",
            "description": "With Kotlin having full interop with Java, mixed codebases have become common and effective - but have made writing developer tools more challenging. How do you support multiple languages with a single tool? How do you convert existing plugins from Java to Kotlin and is there a way to avoid having to? \r\n\r\nThis talk will cover UAST (Universal Abstract Syntax Tree), an API for working with languages generically. With UAST you can write a single tool that will work for both Java and Kotlin - no special casing needed. We will talk about how to setup a plugin to use UAST and walk through a sample that works on mixed codebases.\r\n\r\nThe talk will also dive into the types of problems you can solve by writing an IntelliJ plugin, as well as other applications for UAST outside of IntelliJ IDEA.",
            "startsAt": "2018-10-05T15:15:00",
            "endsAt": "2018-10-05T16:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "6789439c-c425-4179-97b7-ccc21476ea6f",
                "name": "Alec Strong"
              },
              {
                "id": "c42b74f3-0751-4fc8-b857-200b65e7e089",
                "name": "Egor Andreevici"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5701,
                    "name": "Other"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 10286,
                    "name": "_msp"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          },
          {
            "id": "42015",
            "title": "Performant Multiplatform Kotlin Serialization",
            "description": "The promise of Kotlin is mutiplatform.\r\nKotlin serialization is capable of making multiplatform projects share even more code.\r\nCome to learn how to get started with Kotlin serialization, how to use it with your chosen data formats, and how to integrate it with your existing frameworks.\r\nNow is the best time to hack on Kotlin serialization and learn how it can support your use cases.",
            "startsAt": "2018-10-05T16:15:00",
            "endsAt": "2018-10-05T17:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "f5080455-7419-4fc4-91c4-dff6a7d54c53",
                "name": "Eric Cochran"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5695,
                    "name": "Web"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2202,
            "room": "Berlagezaal"
          }
        ],
        "hasOnlyPlenumSessions": false
      },
      {
        "id": 2203,
        "name": "Administratiezaal",
        "sessions": [
          {
            "id": "41150",
            "title": "Writing Stream Processors in Kotlin",
            "description": "At trivago, we use Apache Kafka a lot. We recently migrated a good part of our Kafka-related Java code to Kotlin. In this talk we focus on how extension functions and the closure syntax make things pretty when using Kafka Streams. ",
            "startsAt": "2018-10-05T10:15:00",
            "endsAt": "2018-10-05T11:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "38a26ed1-b62b-44ea-a29c-7f91f083f2f8",
                "name": "Mario Mueller"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5692,
                    "name": "Server"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          },
          {
            "id": "40332",
            "title": "Writing The Next Great Kotlin Novel",
            "description": "Especially if you're coming from Java—prescriptive, formal, and full of boilerplate—Kotlin bursts with expressive freedom.  But how should we exercise this freedom?  How concise is too concise?  (Surely not as concise as Perl.)  How should we choose new language features, and how to mix our code with third party DSLs?  When to omit optional features—and when to keep them in? Moreover, what is our ultimate goal?  Is it brevity and ease of expression when writing code?  Maintainability? Interoperability? Consistency? Or are we trying to write the next great Kotlin novel?\r\n\r\nThis talk begins where the official Kotlin style guides end.  Based on opinionated principles of great writing for the English language, from books like \"On Writing Well\" by William Zinsser, \"On Writing\" by Steven King, \"What I Talk About When I Talk About Running\" by Haruki Murakami, and more, this talk will explore what it means to write great code, by proposing what it means to write great Kotlin.",
            "startsAt": "2018-10-05T11:15:00",
            "endsAt": "2018-10-05T12:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "b2005329-30d3-4783-9a8c-d2e7b2a75f76",
                "name": "Lisa Wray"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          },
          {
            "id": "41716",
            "title": "Porting D3.js to Kotlin multiplatform",
            "description": "D3js is a very successful javascript library for data visualization, this library is exhaustive and widely used, so why port it ? \r\nWell, we had convictions which lead us to start this project: \r\n - a static language can boost productivity and ease maintenance,\r\n - datavisualization deals with a lot of small DSLs, a domain where Kotlin excels,\r\n - Kotlin is a way to provide multiplatform isomorphic visualization on Android, JavaFx and the browser,\r\n - we need a toolable language to develop a future editor.\r\n\r\nIn this session, we will also present the issues we faced porting thousands of highly optimized dynamic javascript lines of code to kotlin multiplatform. You will see the resulting code and the choices we made to achieve 95% of common code.\r\n\r\nFinally we'll demonstrate how DSL + static types will help developers to quick-start a data-visualization project.",
            "startsAt": "2018-10-05T13:00:00",
            "endsAt": "2018-10-05T13:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "8e3ae8b5-046e-46fa-be90-a26c85a7f30f",
                "name": "Gaetan Zoritchak"
              },
              {
                "id": "a1913509-740c-4fe5-966b-207738718896",
                "name": "Pierre Mariac"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5693,
                    "name": "Desktop"
                  },
                  {
                    "id": 5695,
                    "name": "Web"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 10286,
                    "name": "_msp"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          },
          {
            "id": "37796",
            "title": "Kotlin and TornadoFX: The Next Frontier in Modern (Meta)Programming ",
            "description": "With growing complexity in our software systems, technology companies now dedicate greater effort to design product infrastructure to ensure modularity, low-cost solutions, and scalability.  Object Oriented Programming (OOP)'s tendency of designing object-models for domain solutions in addition to its merits in handling large data and reducing complexity makes its usage a natural choice in the industry.  Despite universal usage, Java's limitations in language techniques fail to capture all domain design decisions in a cohesive manner. This issue describes aspects of relational domains, in which scattering and tangling between mapped sources and targets forces large-scale projects to sacrifice domains that guarantees quality software.\r\nKotlin's open-source community is active, its uses are ever-expanding, and its future is bright. This session intends to analyze a general definition of crosscutting and how it affects growing software, how Aspect-Oriented Programming (AOP) attempts to tackle crosscutting, shortcomings in Java’s current approaches in reflexive programming, and subsequently discuss my experiences with TornadoFX in solving day-to-day business inefficiencies through my first attempt at metaprogramming. Exploration through examples will provide insight in Kotlin’s approaches to metaprogramming intended to expose Kotln's predisposition to AOP. By harnessing the power of Kotlin, we can make strides in creating a foundation for rational framework for metaprogramming.",
            "startsAt": "2018-10-05T14:00:00",
            "endsAt": "2018-10-05T14:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "a4d26fc1-9707-4c86-bc82-70b7ce05823c",
                "name": "Amanda Hinchman-Dominguez"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5693,
                    "name": "Desktop"
                  },
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          },
          {
            "id": "41285",
            "title": "Kotlin - a great fit for the Ethereum ecosystem",
            "description": "I want to talk about the usage of Kotlin in the Ethereum ecosystem. Kotlin and Ethereum are a great fit. Not only for writing Android wallet apps like WallETH (http://walleth.org | https://github.com/walleth/walleth)  - but also for libraries like KEthereum (https://github.com/walleth/kethereum) or scripts like used in the Ethereum lists project (https://github.com/ethereum-lists) or even developing Ethereum dApps for IoT with Android-Things.\r\nThis talk will also give an outlook what might happen in the future. Perhaps we can improve smart-contract development with Kotlin at some point? eWASM might be the gateway to this bright future in which we might even be able to use Idea based IDEs to develop smart-contracts and share code between the different edges and contracts. \r\nLastly there will be look over the Ethereum horizon into other parts of the wider decentralized ecosystem. We will look at interfacing the Interplatenary Filesystem (IPFS) with Kotlin (https://github.com/ligi/IPFSDroid | https://github.com/ligi/ipfs-api-kotlin)\r\n",
            "startsAt": "2018-10-05T15:15:00",
            "endsAt": "2018-10-05T16:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "49a1571c-8af9-4166-a666-c4ad8c311018",
                "name": "Marcus Ligi"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5697,
                    "name": "Frameworks and Libraries"
                  },
                  {
                    "id": 5694,
                    "name": "Mobile"
                  },
                  {
                    "id": 5696,
                    "name": "IoT"
                  },
                  {
                    "id": 5701,
                    "name": "Other"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          },
          {
            "id": "41125",
            "title": "Implementing Raft protocol by coroutines and Ktor Framework",
            "description": "We are living in an age of distributed systems. And one of the most challenging problems is consensus problem. Raft is a consensus protocol that is used in many production systems like Docker swarm, Consul, Kudu, RavenDB etc.\r\nThis protocol is based on asynchronous communication between nodes in a cluster (with leader election, log replication, tolerate node failures, timeouts etc.), so we need some useful mechanisms and language features to effectively implement protocol behavior.\r\nDuring the talk, we will briefly discuss Raft basics and then, in a code, look how part of the protocol could be implemented using coroutines and Ktor Framework. In the end, we will see in-memory key-value store based on Raft protocol that can tolerate node failures in the work.",
            "startsAt": "2018-10-05T16:15:00",
            "endsAt": "2018-10-05T17:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "a3e4f4b6-28d4-4f69-949b-0f54d8cf800e",
                "name": "Andrii Rodionov"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5671,
                    "name": "Advanced"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [
                  {
                    "id": 5705,
                    "name": "Concurrent"
                  },
                  {
                    "id": 5692,
                    "name": "Server"
                  }
                ],
                "sort": 1004
              }
            ],
            "roomId": 2203,
            "room": "Administratiezaal"
          }
        ],
        "hasOnlyPlenumSessions": false
      },
      {
        "id": 2204,
        "name": "Verwey kamer",
        "sessions": [
          {
            "id": "30782c67-7b6e-4f21-8014-4a9c58a2178e",
            "title": "Big Nerd Ranch QA",
            "description": null,
            "startsAt": "2018-10-05T10:15:00",
            "endsAt": "2018-10-05T11:00:00",
            "isServiceSession": true,
            "isPlenumSession": false,
            "speakers": [],
            "categories": [],
            "roomId": 2204,
            "room": "Verwey kamer"
          },
          {
            "id": "64127",
            "title": "[Code Lab] Higher-order Functions",
            "description": "Function types may be a new concept for Kotlin learners. We’ll walk through their syntax, their performance implications, and how to best leverage them in your apps.",
            "startsAt": "2018-10-05T11:15:00",
            "endsAt": "2018-10-05T12:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "aa76105c-df4b-485c-a7ea-7bd708eae355",
                "name": "Big Nerd Ranch"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2204,
            "room": "Verwey kamer"
          },
          {
            "id": "28afe6b0-8a87-4b7d-901f-293302a5d157",
            "title": "Big Nerd Ranch QA",
            "description": null,
            "startsAt": "2018-10-05T13:00:00",
            "endsAt": "2018-10-05T13:45:00",
            "isServiceSession": true,
            "isPlenumSession": false,
            "speakers": [],
            "categories": [],
            "roomId": 2204,
            "room": "Verwey kamer"
          },
          {
            "id": "64133",
            "title": "[Code Lab] Kotlin + RxJava",
            "description": "RxJava introduced functional programming to many Java developers. How does that experience track to Kotlin? We’ll compare and contrast RxJava and RxKotlin and smooth over any hiccups that you may encounter writing functional reactive code in Kotlin.",
            "startsAt": "2018-10-05T14:00:00",
            "endsAt": "2018-10-05T14:45:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "9c7ffc76-4b6a-43b3-b37d-90c3d5765b66",
                "name": "Big Nerd Ranch"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5670,
                    "name": "Intermediate"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2204,
            "room": "Verwey kamer"
          },
          {
            "id": "46f29115-f7f6-4810-ab26-ba612f359e66",
            "title": "Big Nerd Ranch QA",
            "description": null,
            "startsAt": "2018-10-05T15:15:00",
            "endsAt": "2018-10-05T16:00:00",
            "isServiceSession": true,
            "isPlenumSession": false,
            "speakers": [],
            "categories": [],
            "roomId": 2204,
            "room": "Verwey kamer"
          },
          {
            "id": "64135",
            "title": "[Code Lab] Leveling up with Exercism",
            "description": "Learn how to use Exercism to expand your knowledge of Kotlin programming, guided by tests. We'll work through problems and share solutions in this interactive session.",
            "startsAt": "2018-10-05T16:15:00",
            "endsAt": "2018-10-05T17:00:00",
            "isServiceSession": false,
            "isPlenumSession": false,
            "speakers": [
              {
                "id": "78a176e1-8277-43b0-9071-9c90fed06bdb",
                "name": "Big Nerd Ranch"
              }
            ],
            "categories": [
              {
                "id": 1275,
                "name": "Level",
                "categoryItems": [
                  {
                    "id": 5669,
                    "name": "Introductory and overview"
                  }
                ],
                "sort": 1002
              },
              {
                "id": 1281,
                "name": "Tags",
                "categoryItems": [],
                "sort": 1004
              }
            ],
            "roomId": 2204,
            "room": "Verwey kamer"
          }
        ],
        "hasOnlyPlenumSessions": false
      }
    ],
    "timeSlots": [
      {
        "slotStart": "08:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "34112e54-b628-48c5-a1b5-767ab1208b82",
              "title": "Registration",
              "description": null,
              "startsAt": "2018-10-05T08:00:00",
              "endsAt": "2018-10-05T09:00:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "09:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "34486",
              "title": "I am a developer at 54",
              "description": "I will talk about how and why I wanted to be an iOS mobile developer at the age of 51. How a 16 year inspired me to learn to code and the challenges I face after becoming an iOS developer being the first self-taught African American woman mobile developer to create a domestic violence app dedicated to helping victims escape abuse and how Apple found me and was highlight at WWDC 2015, 2016 keynote event and I am a developer video. Some people want to believe that people my age are out of touch with technology and as a woman. \r\n",
              "startsAt": "2018-10-05T09:00:00",
              "endsAt": "2018-10-05T10:00:00",
              "isServiceSession": false,
              "isPlenumSession": true,
              "speakers": [
                {
                  "id": "ea04cece-9b5b-49b3-8faf-4e3fef18084f",
                  "name": "Alicia Carr"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5694,
                      "name": "Mobile"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "10:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "441184bd-e66a-476d-b9bc-3312403a6fce",
              "title": "Break",
              "description": null,
              "startsAt": "2018-10-05T10:00:00",
              "endsAt": "2018-10-05T10:15:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "10:15:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "41601",
              "title": "Exploring Coroutines in Kotlin",
              "description": "Coroutines have intrigued programmers for a long time. Some languages of the past implemented coroutines, but programmers using the mainstream languages of recent decades largely did not get much exposure to this programming construct. There's a resurgence of interest for coroutines and some serious work has been done in Kotlin to implement it. We'll take an example oriented approach to learning about the benefits of coroutines and along the way explore this feature of Kotlin.",
              "startsAt": "2018-10-05T10:15:00",
              "endsAt": "2018-10-05T11:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "b576bdc5-c994-40f5-b1dd-e0f9f7999fa9",
                  "name": "Venkat Subramaniam"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "21936",
              "title": "Painless Microservices with Kotlin",
              "description": "Many will say: \"Building microservices is hard!\". But with the right set of tools, technologies and frameworks it appeared to be not the case. During this session we'll talk about modern microservices in general and how Kotlin helped us. \r\n\r\nWe'll talk about Java Interoperability which allowed us to use all the goods of Java ecosystem. How building different Kotlin DSLs helped us to manage our infrastructure and orchestrate microservices. And finally how to manage this Kotlin code base in an efficient manner.",
              "startsAt": "2018-10-05T10:15:00",
              "endsAt": "2018-10-05T11:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "213b4eae-99e8-4090-b508-4d2c9a85a989",
                  "name": "Fedor Korotkov"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5692,
                      "name": "Server"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5703,
                      "name": "Ops"
                    },
                    {
                      "id": 5699,
                      "name": "Case Studies"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "41570",
              "title": "Making Noise with Kotlin/Native",
              "description": "Making Noise with Kotlin/Native\r\n\r\nKotlin/Native lets you reach beyond the JVM, and into the world of hardware.\r\nIn this talk we will use Kotlin/Native to create a hardware audio synthesizer.\r\nYou will learn how to interface with C++ libraries and compile and deploy Kotlin to embedded systems. We will explore the state of the current Kotlin/Native ecosystem and what it provides.\r\nThe result will be something we can jam with, Kotlin/Native-style!",
              "startsAt": "2018-10-05T10:15:00",
              "endsAt": "2018-10-05T11:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "72065026-0b59-400c-95c2-3e080ba22bff",
                  "name": "Josh Skeen"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5701,
                      "name": "Other"
                    },
                    {
                      "id": 5696,
                      "name": "IoT"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "41150",
              "title": "Writing Stream Processors in Kotlin",
              "description": "At trivago, we use Apache Kafka a lot. We recently migrated a good part of our Kafka-related Java code to Kotlin. In this talk we focus on how extension functions and the closure syntax make things pretty when using Kafka Streams. ",
              "startsAt": "2018-10-05T10:15:00",
              "endsAt": "2018-10-05T11:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "38a26ed1-b62b-44ea-a29c-7f91f083f2f8",
                  "name": "Mario Mueller"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5692,
                      "name": "Server"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "30782c67-7b6e-4f21-8014-4a9c58a2178e",
              "title": "Big Nerd Ranch QA",
              "description": null,
              "startsAt": "2018-10-05T10:15:00",
              "endsAt": "2018-10-05T11:00:00",
              "isServiceSession": true,
              "isPlenumSession": false,
              "speakers": [],
              "categories": [],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      },
      {
        "slotStart": "11:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "47cadfe7-3322-43d5-b19c-9f593af90ff9",
              "title": "Break",
              "description": null,
              "startsAt": "2018-10-05T11:00:00",
              "endsAt": "2018-10-05T11:15:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "11:15:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "21819",
              "title": "Functional Programming in Kotlin with Λrrow",
              "description": "This talk is a comprehensive walkthrough of the most important patterns covered by the data types and type classes we find in Λrrow. Each pattern will be accompanied by code examples that illustrate how Λrrow brings Typed Functional Programming to the Kotlin Programming Language",
              "startsAt": "2018-10-05T11:15:00",
              "endsAt": "2018-10-05T12:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "e48d1ec9-1d3b-41d8-a04f-b3932cbc30c4",
                  "name": "Raúl Raja Martínez"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5704,
                      "name": "Functional"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5705,
                      "name": "Concurrent"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "42118",
              "title": "iOS Architecture with Multiplatform",
              "description": "2018 and 2019 will see a flood of mobile multiplatform libraries for Android and IOS using Kotlin Multiplatform. Mobile developers have had a decade to fine tune state-of-the-art best practice for the Android and iOS platforms. Those libraries will need analogs, and will quickly appear once the tooling and community mature. This talk will be an overview of what major libraries are available, what's coming soon, what libraries somebody desperately needs to build, and best resources on how to get started.",
              "startsAt": "2018-10-05T11:15:00",
              "endsAt": "2018-10-05T12:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "1bdf0b7f-2a71-4d40-a3e1-cb481f328361",
                  "name": "Kevin Galligan"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5694,
                      "name": "Mobile"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "38447",
              "title": "Datomic - the most innovative DB you've never heard of",
              "description": "Datomic is a strange database. The writer is single threaded. It writes to other databases and has no storage of its own. It has a completely different API for reads and writes. Queries runs on the client, not the server. Time travel is built in, and you can query the history of your database.\r\n\r\nIn this talk, you'll learn where Datomic fits and for which use cases the above are good ideas, how Datomic actually invented very little and stands on the shoulders of BigTable and VoltDB, all using Kotlin, of course :)",
              "startsAt": "2018-10-05T11:15:00",
              "endsAt": "2018-10-05T12:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "91fa2bcc-0baa-4966-95b0-fb4985a68550",
                  "name": "August Lilleaas"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5671,
                      "name": "Advanced"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5692,
                      "name": "Server"
                    },
                    {
                      "id": 5704,
                      "name": "Functional"
                    },
                    {
                      "id": 5705,
                      "name": "Concurrent"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "40332",
              "title": "Writing The Next Great Kotlin Novel",
              "description": "Especially if you're coming from Java—prescriptive, formal, and full of boilerplate—Kotlin bursts with expressive freedom.  But how should we exercise this freedom?  How concise is too concise?  (Surely not as concise as Perl.)  How should we choose new language features, and how to mix our code with third party DSLs?  When to omit optional features—and when to keep them in? Moreover, what is our ultimate goal?  Is it brevity and ease of expression when writing code?  Maintainability? Interoperability? Consistency? Or are we trying to write the next great Kotlin novel?\r\n\r\nThis talk begins where the official Kotlin style guides end.  Based on opinionated principles of great writing for the English language, from books like \"On Writing Well\" by William Zinsser, \"On Writing\" by Steven King, \"What I Talk About When I Talk About Running\" by Haruki Murakami, and more, this talk will explore what it means to write great code, by proposing what it means to write great Kotlin.",
              "startsAt": "2018-10-05T11:15:00",
              "endsAt": "2018-10-05T12:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "b2005329-30d3-4783-9a8c-d2e7b2a75f76",
                  "name": "Lisa Wray"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "64127",
              "title": "[Code Lab] Higher-order Functions",
              "description": "Function types may be a new concept for Kotlin learners. We’ll walk through their syntax, their performance implications, and how to best leverage them in your apps.",
              "startsAt": "2018-10-05T11:15:00",
              "endsAt": "2018-10-05T12:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "aa76105c-df4b-485c-a7ea-7bd708eae355",
                  "name": "Big Nerd Ranch"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      },
      {
        "slotStart": "12:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "eee384d7-28ce-4051-afc4-28ac0723b526",
              "title": "Lunch",
              "description": null,
              "startsAt": "2018-10-05T12:00:00",
              "endsAt": "2018-10-05T13:00:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "13:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "41204",
              "title": "Kotlin Coroutines in Practice",
              "description": "Let's see how Kotlin Coroutines are used to solve real-life concurrency and coordination problems. With coroutines we don't have to worry about shared mutable state and synchronization. We can solve the problems we face using a number of communicating coroutines, where each piece of state is confined to a single coroutine.",
              "startsAt": "2018-10-05T13:00:00",
              "endsAt": "2018-10-05T13:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "844e820d-d54c-49ec-9e4b-e0edc1756eb0",
                  "name": "Roman Elizarov"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5705,
                      "name": "Concurrent"
                    },
                    {
                      "id": 5692,
                      "name": "Server"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "42128",
              "title": "Android KTX: A dash of Kotlin makes all the difference!",
              "description": "When Kotlin hit the Android scene, one of the first things many of us did was wrap difficult-to-use Android Framework APIs with extension functions. That little sprinkle of Kotlin made all the difference, and life was great — we finally we had a way to make our least favorite calls more concise and easier to work with!\r\n\r\nAndroid KTX builds on this same idea and makes them available to everyone. It's a new set of open source Kotlin extensions (maintained by Google) that sits on top of commonly used Framework methods, abstracting much of the complexity and boilerplate away. This vastly improves the conciseness and readability of your code, making it more idiomatic and enjoyable to work with.\r\n\r\nIn this talk we'll start with a brief intro to KTX — what it is, why it's so great, and what it means for us as Android developers. Next we'll take a tour of what extensions are currently available, highlighting some of my favorites. We'll compare the old, hard ways of doing things against the new, friendlier ways that KTX provides so you can clearly see how life with KTX is better! \r\n\r\nBy the end you’ll have a better idea of 1) how you can improve your Android code by using KTX in your daily work and 2) what well-designed extension methods look like so you can wrap/extend the Android framework for your own use (or to contribute back into KTX!)\f",
              "startsAt": "2018-10-05T13:00:00",
              "endsAt": "2018-10-05T13:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "36b53fcf-430a-4425-ac8c-d1a36263b612",
                  "name": "Dan Kim"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5694,
                      "name": "Mobile"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "41725",
              "title": "Building Server Backends with Ktor",
              "description": "Using Ktor from JetBrains, you can build your server backend using familiar Kotlin syntax and features like coroutines. Ktor works with standard servlet containers, including Google's App Engine, which will host and scale your backend automatically.\r\n\r\nThis talk will be a practical guide to building a cost effective in app purchase verification backend for your app using Ktor on Google App Engine.  From here, it's easy to expand your backend and share code between your client and server, making maintenance and development faster and easier.",
              "startsAt": "2018-10-05T13:00:00",
              "endsAt": "2018-10-05T13:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "f1275dc9-492b-4ab1-b31b-3e19bccde628",
                  "name": "Ryan Harter"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5692,
                      "name": "Server"
                    },
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "41716",
              "title": "Porting D3.js to Kotlin multiplatform",
              "description": "D3js is a very successful javascript library for data visualization, this library is exhaustive and widely used, so why port it ? \r\nWell, we had convictions which lead us to start this project: \r\n - a static language can boost productivity and ease maintenance,\r\n - datavisualization deals with a lot of small DSLs, a domain where Kotlin excels,\r\n - Kotlin is a way to provide multiplatform isomorphic visualization on Android, JavaFx and the browser,\r\n - we need a toolable language to develop a future editor.\r\n\r\nIn this session, we will also present the issues we faced porting thousands of highly optimized dynamic javascript lines of code to kotlin multiplatform. You will see the resulting code and the choices we made to achieve 95% of common code.\r\n\r\nFinally we'll demonstrate how DSL + static types will help developers to quick-start a data-visualization project.",
              "startsAt": "2018-10-05T13:00:00",
              "endsAt": "2018-10-05T13:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "8e3ae8b5-046e-46fa-be90-a26c85a7f30f",
                  "name": "Gaetan Zoritchak"
                },
                {
                  "id": "a1913509-740c-4fe5-966b-207738718896",
                  "name": "Pierre Mariac"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5693,
                      "name": "Desktop"
                    },
                    {
                      "id": 5695,
                      "name": "Web"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 10286,
                      "name": "_msp"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "28afe6b0-8a87-4b7d-901f-293302a5d157",
              "title": "Big Nerd Ranch QA",
              "description": null,
              "startsAt": "2018-10-05T13:00:00",
              "endsAt": "2018-10-05T13:45:00",
              "isServiceSession": true,
              "isPlenumSession": false,
              "speakers": [],
              "categories": [],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      },
      {
        "slotStart": "13:45:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "840d6e77-6f94-45bb-a3a1-cf541de563a8",
              "title": "Break",
              "description": null,
              "startsAt": "2018-10-05T13:45:00",
              "endsAt": "2018-10-05T14:00:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "14:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "41946",
              "title": "10 tips to make libraries Kotlin-friendly",
              "description": "There's plenty out there about how to make Kotlin work well with Java - but what about the reverse? Do you want to appeal more to your Kotlin customers whilst maintaining an idiomatic experience for your Java customers? This session will cover 10(ish) tips and tricks you can apply to your Java library to make it more Kotlin-friendly without sacrificing usability for your Java customers. We'll look at case-studies of real open-source Java libraries and show you techniques you can apply to make your library play nicely within the Kotlin ecosystem.",
              "startsAt": "2018-10-05T14:00:00",
              "endsAt": "2018-10-05T14:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "51768d2d-f074-43b4-bf75-c285b0a62de4",
                  "name": "Kyle Thomson"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "41109",
              "title": "Best Practices for Unit Testing in Kotlin",
              "description": "Unit Testing in Kotlin is fun and tricky at the same time. We can benefit a lot from Kotlin's powerful language features to write readable and concise unit tests. But in order to write idiomatic Kotlin test code in the first place, there is a certain test setup required. We'll talk about test lifecycles, mocking challenges, proper assertion libraries, the power of data classes and about spring integration. This talk contains best practices and guidelines to write unit test code in Kotlin that is idiomatic, readable, concise and produces reasonable failure messages.",
              "startsAt": "2018-10-05T14:00:00",
              "endsAt": "2018-10-05T14:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "cfc62379-558d-49f1-a635-27f2f0290718",
                  "name": "Philipp Hauer"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5692,
                      "name": "Server"
                    },
                    {
                      "id": 5693,
                      "name": "Desktop"
                    },
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5695,
                      "name": "Web"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "41878",
              "title": "Learn together. Not the same",
              "description": "Adopting Kotlin is a great opportunity to learn something new as a team. When learning we tried different approaches - from an hour of learning Kotlin, to improving our code reviews to focus on learning.\r\n\r\nLast year our team made the leap to using Kotlin in production - what worked? What didn’t? How did we keep the collaboration momentum going?\r\n\r\nHear about how learning a new language as a team made us more open to asking questions, admitting things we didn’t know, prevented imposter syndrome and improved our engineering culture, process and code.",
              "startsAt": "2018-10-05T14:00:00",
              "endsAt": "2018-10-05T14:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "3d4b5098-0829-4b34-b0bf-122ab126fdae",
                  "name": "Maria Neumayer"
                },
                {
                  "id": "ab1a4453-1a4e-45da-af4e-9428b12d0cbe",
                  "name": "Amal Kakaiya"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5699,
                      "name": "Case Studies"
                    },
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 10286,
                      "name": "_msp"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "37796",
              "title": "Kotlin and TornadoFX: The Next Frontier in Modern (Meta)Programming ",
              "description": "With growing complexity in our software systems, technology companies now dedicate greater effort to design product infrastructure to ensure modularity, low-cost solutions, and scalability.  Object Oriented Programming (OOP)'s tendency of designing object-models for domain solutions in addition to its merits in handling large data and reducing complexity makes its usage a natural choice in the industry.  Despite universal usage, Java's limitations in language techniques fail to capture all domain design decisions in a cohesive manner. This issue describes aspects of relational domains, in which scattering and tangling between mapped sources and targets forces large-scale projects to sacrifice domains that guarantees quality software.\r\nKotlin's open-source community is active, its uses are ever-expanding, and its future is bright. This session intends to analyze a general definition of crosscutting and how it affects growing software, how Aspect-Oriented Programming (AOP) attempts to tackle crosscutting, shortcomings in Java’s current approaches in reflexive programming, and subsequently discuss my experiences with TornadoFX in solving day-to-day business inefficiencies through my first attempt at metaprogramming. Exploration through examples will provide insight in Kotlin’s approaches to metaprogramming intended to expose Kotln's predisposition to AOP. By harnessing the power of Kotlin, we can make strides in creating a foundation for rational framework for metaprogramming.",
              "startsAt": "2018-10-05T14:00:00",
              "endsAt": "2018-10-05T14:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "a4d26fc1-9707-4c86-bc82-70b7ce05823c",
                  "name": "Amanda Hinchman-Dominguez"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5693,
                      "name": "Desktop"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "64133",
              "title": "[Code Lab] Kotlin + RxJava",
              "description": "RxJava introduced functional programming to many Java developers. How does that experience track to Kotlin? We’ll compare and contrast RxJava and RxKotlin and smooth over any hiccups that you may encounter writing functional reactive code in Kotlin.",
              "startsAt": "2018-10-05T14:00:00",
              "endsAt": "2018-10-05T14:45:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "9c7ffc76-4b6a-43b3-b37d-90c3d5765b66",
                  "name": "Big Nerd Ranch"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      },
      {
        "slotStart": "14:45:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "0c760239-d228-46e8-9b32-b5eb215c60ef",
              "title": "Afternoon Break",
              "description": null,
              "startsAt": "2018-10-05T14:45:00",
              "endsAt": "2018-10-05T15:15:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "15:15:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "41599",
              "title": "Creating Internal DSLs in Kotlin",
              "description": "Domain Specific Languages (DSLs) are concise, fluent, and carry implicit context. For a language to be used as a host for internal DSLs first it needs to have low ceremony. Then it should provide a way to inject behavior into classes as well. Kotlin has both of those capabilities. In this presentation we will start with a quick discussion of DSLs, their characteristics, and then dive into examples of creating DSLs using the facilities that are native to Kotlin.",
              "startsAt": "2018-10-05T15:15:00",
              "endsAt": "2018-10-05T16:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "b576bdc5-c994-40f5-b1dd-e0f9f7999fa9",
                  "name": "Venkat Subramaniam"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5702,
                      "name": "Scripting"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "42182",
              "title": "Coroutines and Reactive Programming - friends or foes?",
              "description": "Coroutines may be seen as a replacement of reactive programming. Both of them offer the possibility to create asynchronous applications although in a very different way.\r\nDoes it still make sense to use reactive programming in Kotlin? Or can we just stick with coroutines and forget all about other asynchronous applications approaches?\r\nOr maybe we can mix both of them, take their best parts and come up with a solution which is superior to any of the two?\r\n\r\nIn this session we'll learn the differences between coroutines and reactive programming. We'll see when one shines and the other... is not so great. We'll look under the hood \r\nto find out the reasons behind some design decisions and how those decisions affect performance and interoperability. We'll try to decide when we should use coroutines\r\nand when the reactive programming model is better.",
              "startsAt": "2018-10-05T15:15:00",
              "endsAt": "2018-10-05T16:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "85cab1b6-a362-412a-b855-4e1027cf54fd",
                  "name": "Konrad Kamiński"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5671,
                      "name": "Advanced"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5704,
                      "name": "Functional"
                    },
                    {
                      "id": 5705,
                      "name": "Concurrent"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "42114",
              "title": "What's the big IDEA? Writing IntelliJ plugins for Kotlin",
              "description": "With Kotlin having full interop with Java, mixed codebases have become common and effective - but have made writing developer tools more challenging. How do you support multiple languages with a single tool? How do you convert existing plugins from Java to Kotlin and is there a way to avoid having to? \r\n\r\nThis talk will cover UAST (Universal Abstract Syntax Tree), an API for working with languages generically. With UAST you can write a single tool that will work for both Java and Kotlin - no special casing needed. We will talk about how to setup a plugin to use UAST and walk through a sample that works on mixed codebases.\r\n\r\nThe talk will also dive into the types of problems you can solve by writing an IntelliJ plugin, as well as other applications for UAST outside of IntelliJ IDEA.",
              "startsAt": "2018-10-05T15:15:00",
              "endsAt": "2018-10-05T16:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "6789439c-c425-4179-97b7-ccc21476ea6f",
                  "name": "Alec Strong"
                },
                {
                  "id": "c42b74f3-0751-4fc8-b857-200b65e7e089",
                  "name": "Egor Andreevici"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5701,
                      "name": "Other"
                    },
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 10286,
                      "name": "_msp"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "41285",
              "title": "Kotlin - a great fit for the Ethereum ecosystem",
              "description": "I want to talk about the usage of Kotlin in the Ethereum ecosystem. Kotlin and Ethereum are a great fit. Not only for writing Android wallet apps like WallETH (http://walleth.org | https://github.com/walleth/walleth)  - but also for libraries like KEthereum (https://github.com/walleth/kethereum) or scripts like used in the Ethereum lists project (https://github.com/ethereum-lists) or even developing Ethereum dApps for IoT with Android-Things.\r\nThis talk will also give an outlook what might happen in the future. Perhaps we can improve smart-contract development with Kotlin at some point? eWASM might be the gateway to this bright future in which we might even be able to use Idea based IDEs to develop smart-contracts and share code between the different edges and contracts. \r\nLastly there will be look over the Ethereum horizon into other parts of the wider decentralized ecosystem. We will look at interfacing the Interplatenary Filesystem (IPFS) with Kotlin (https://github.com/ligi/IPFSDroid | https://github.com/ligi/ipfs-api-kotlin)\r\n",
              "startsAt": "2018-10-05T15:15:00",
              "endsAt": "2018-10-05T16:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "49a1571c-8af9-4166-a666-c4ad8c311018",
                  "name": "Marcus Ligi"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5696,
                      "name": "IoT"
                    },
                    {
                      "id": 5701,
                      "name": "Other"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "46f29115-f7f6-4810-ab26-ba612f359e66",
              "title": "Big Nerd Ranch QA",
              "description": null,
              "startsAt": "2018-10-05T15:15:00",
              "endsAt": "2018-10-05T16:00:00",
              "isServiceSession": true,
              "isPlenumSession": false,
              "speakers": [],
              "categories": [],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      },
      {
        "slotStart": "16:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "554a4fe9-db62-4aa2-818b-f093c053be6d",
              "title": "Break",
              "description": null,
              "startsAt": "2018-10-05T16:00:00",
              "endsAt": "2018-10-05T16:15:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "16:15:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "38889",
              "title": "Kotlin puzzlers, vol 2",
              "description": "Kotlin is a marvelous language that makes programming on the JVM fun again. During the design phase of the language, it was said that Kotlin specifically tried to avoid some of the most famous Java Puzzlers. However, having so many advanced features in the language it cannot avoid introducing puzzlers of its own. This talk will present some of the more interesting nuances of syntax or language features with the help of small puzzler programs letting the audience guess their behavior. The mystery will then be revealed with an explanation in a fun way.\r\n\r\nHaving received an overwhelmingly good feedback from the previous year, I am ready with a set of completely new puzzlers to entertain you among all these really serious talks! Don't miss this sequel to one of the highest rated talks of Kotlinconf 2017!",
              "startsAt": "2018-10-05T16:15:00",
              "endsAt": "2018-10-05T17:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "d7dfcb8f-a341-4dd9-9e70-739b76a0fe70",
                  "name": "Anton Keks"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5701,
                      "name": "Other"
                    },
                    {
                      "id": 5702,
                      "name": "Scripting"
                    },
                    {
                      "id": 5704,
                      "name": "Functional"
                    },
                    {
                      "id": 5705,
                      "name": "Concurrent"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          },
          {
            "id": 2201,
            "name": "Granbeurszaal",
            "session": {
              "id": "41590",
              "title": "Sealed classes opened my mind - How we use Kotlin to tame state at Etsy",
              "description": "The talk explores using sealed classes to represent state via an event stream and how we can take filtered views of it while still maintaining the exhaustiveness of `when`.\r\nThe talk would follow the concepts outlined in my post here: \r\nhttps://codeascraft.com/2018/04/12/sealed-classes-opened-my-mind/\r\n\r\nAdditionally it would explore how to use RxJava to emit these events and how to use when and filterIsInstance to react to them.  \r\n\r\nThere will also be a section on how Java's instanceof was often considered a poor practice and the (sometimes painful) indirection of polymorphic solutions like the visitor pattern.  And finally how Kotlin makes all that pain go away.",
              "startsAt": "2018-10-05T16:15:00",
              "endsAt": "2018-10-05T17:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "c66e2690-d819-439d-932f-8ff45454568b",
                  "name": "Patrick Cousins"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5704,
                      "name": "Functional"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2201,
              "room": "Granbeurszaal"
            },
            "index": 1
          },
          {
            "id": 2202,
            "name": "Berlagezaal",
            "session": {
              "id": "42015",
              "title": "Performant Multiplatform Kotlin Serialization",
              "description": "The promise of Kotlin is mutiplatform.\r\nKotlin serialization is capable of making multiplatform projects share even more code.\r\nCome to learn how to get started with Kotlin serialization, how to use it with your chosen data formats, and how to integrate it with your existing frameworks.\r\nNow is the best time to hack on Kotlin serialization and learn how it can support your use cases.",
              "startsAt": "2018-10-05T16:15:00",
              "endsAt": "2018-10-05T17:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "f5080455-7419-4fc4-91c4-dff6a7d54c53",
                  "name": "Eric Cochran"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5697,
                      "name": "Frameworks and Libraries"
                    },
                    {
                      "id": 5694,
                      "name": "Mobile"
                    },
                    {
                      "id": 5695,
                      "name": "Web"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2202,
              "room": "Berlagezaal"
            },
            "index": 2
          },
          {
            "id": 2203,
            "name": "Administratiezaal",
            "session": {
              "id": "41125",
              "title": "Implementing Raft protocol by coroutines and Ktor Framework",
              "description": "We are living in an age of distributed systems. And one of the most challenging problems is consensus problem. Raft is a consensus protocol that is used in many production systems like Docker swarm, Consul, Kudu, RavenDB etc.\r\nThis protocol is based on asynchronous communication between nodes in a cluster (with leader election, log replication, tolerate node failures, timeouts etc.), so we need some useful mechanisms and language features to effectively implement protocol behavior.\r\nDuring the talk, we will briefly discuss Raft basics and then, in a code, look how part of the protocol could be implemented using coroutines and Ktor Framework. In the end, we will see in-memory key-value store based on Raft protocol that can tolerate node failures in the work.",
              "startsAt": "2018-10-05T16:15:00",
              "endsAt": "2018-10-05T17:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "a3e4f4b6-28d4-4f69-949b-0f54d8cf800e",
                  "name": "Andrii Rodionov"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5671,
                      "name": "Advanced"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5705,
                      "name": "Concurrent"
                    },
                    {
                      "id": 5692,
                      "name": "Server"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2203,
              "room": "Administratiezaal"
            },
            "index": 3
          },
          {
            "id": 2204,
            "name": "Verwey kamer",
            "session": {
              "id": "64135",
              "title": "[Code Lab] Leveling up with Exercism",
              "description": "Learn how to use Exercism to expand your knowledge of Kotlin programming, guided by tests. We'll work through problems and share solutions in this interactive session.",
              "startsAt": "2018-10-05T16:15:00",
              "endsAt": "2018-10-05T17:00:00",
              "isServiceSession": false,
              "isPlenumSession": false,
              "speakers": [
                {
                  "id": "78a176e1-8277-43b0-9071-9c90fed06bdb",
                  "name": "Big Nerd Ranch"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5669,
                      "name": "Introductory and overview"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [],
                  "sort": 1004
                }
              ],
              "roomId": 2204,
              "room": "Verwey kamer"
            },
            "index": 4
          }
        ]
      },
      {
        "slotStart": "17:00:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "24ae9b95-e016-454c-8ddf-6744d1597b00",
              "title": "Break",
              "description": null,
              "startsAt": "2018-10-05T17:00:00",
              "endsAt": "2018-10-05T17:15:00",
              "isServiceSession": true,
              "isPlenumSession": true,
              "speakers": [],
              "categories": [],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      },
      {
        "slotStart": "17:15:00",
        "rooms": [
          {
            "id": 2200,
            "name": "Effectenbeurzaal",
            "session": {
              "id": "33656",
              "title": "Closing Panel",
              "description": "You're not going to want to miss the closing panel, where we'll have members of the Kotlin team and the Kotlin community answering the easiest, not so easiest and downright difficult questions! \r\n",
              "startsAt": "2018-10-05T17:15:00",
              "endsAt": "2018-10-05T18:15:00",
              "isServiceSession": false,
              "isPlenumSession": true,
              "speakers": [
                {
                  "id": "9ff98d8b-f176-49b9-a871-339cf8fad50b",
                  "name": "Jeffrey van Gogh"
                },
                {
                  "id": "9671b9b6-771a-4df2-b800-1298c43b0a3b",
                  "name": "Andrey Breslav"
                },
                {
                  "id": "02695d1e-b965-4549-a3aa-1e002b176bf7",
                  "name": "William Cook"
                }
              ],
              "categories": [
                {
                  "id": 1275,
                  "name": "Level",
                  "categoryItems": [
                    {
                      "id": 5670,
                      "name": "Intermediate"
                    }
                  ],
                  "sort": 1002
                },
                {
                  "id": 1281,
                  "name": "Tags",
                  "categoryItems": [
                    {
                      "id": 5701,
                      "name": "Other"
                    }
                  ],
                  "sort": 1004
                }
              ],
              "roomId": 2200,
              "room": "Effectenbeurzaal"
            },
            "index": 0
          }
        ]
      }
    ]
  }
]